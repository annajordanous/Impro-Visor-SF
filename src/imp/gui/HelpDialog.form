<?xml version="1.0" encoding="UTF-8" ?>

<Form version="1.8" maxVersion="1.8" type="org.netbeans.modules.form.forminfo.JDialogFormInfo">
  <Properties>
    <Property name="defaultCloseOperation" type="int" value="2"/>
    <Property name="minimumSize" type="java.awt.Dimension" editor="org.netbeans.beaninfo.editors.DimensionEditor">
      <Dimension value="[680, 800]"/>
    </Property>
    <Property name="preferredSize" type="java.awt.Dimension" editor="org.netbeans.beaninfo.editors.DimensionEditor">
      <Dimension value="[680, 800]"/>
    </Property>
  </Properties>
  <SyntheticProperties>
    <SyntheticProperty name="formSizePolicy" type="int" value="1"/>
    <SyntheticProperty name="generateCenter" type="boolean" value="false"/>
  </SyntheticProperties>
  <AuxValues>
    <AuxValue name="FormSettings_autoResourcing" type="java.lang.Integer" value="0"/>
    <AuxValue name="FormSettings_autoSetComponentName" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_generateFQN" type="java.lang.Boolean" value="true"/>
    <AuxValue name="FormSettings_generateMnemonicsCode" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_i18nAutoMode" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_layoutCodeTarget" type="java.lang.Integer" value="2"/>
    <AuxValue name="FormSettings_listenerGenerationStyle" type="java.lang.Integer" value="0"/>
    <AuxValue name="FormSettings_variablesLocal" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_variablesModifier" type="java.lang.Integer" value="2"/>
    <AuxValue name="designerSize" type="java.awt.Dimension" value="-84,-19,0,5,115,114,0,18,106,97,118,97,46,97,119,116,46,68,105,109,101,110,115,105,111,110,65,-114,-39,-41,-84,95,68,20,2,0,2,73,0,6,104,101,105,103,104,116,73,0,5,119,105,100,116,104,120,112,0,0,2,-64,0,0,3,106"/>
  </AuxValues>

  <Layout class="org.netbeans.modules.form.compat2.layouts.DesignGridBagLayout"/>
  <SubComponents>
    <Container class="javax.swing.JTabbedPane" name="helpTabbedPane">
      <Properties>
        <Property name="toolTipText" type="java.lang.String" value="Alphabetic Listing of Key Commands"/>
        <Property name="minimumSize" type="java.awt.Dimension" editor="org.netbeans.beaninfo.editors.DimensionEditor">
          <Dimension value="[500, 700]"/>
        </Property>
        <Property name="preferredSize" type="java.awt.Dimension" editor="org.netbeans.beaninfo.editors.DimensionEditor">
          <Dimension value="[600, 800]"/>
        </Property>
      </Properties>
      <Constraints>
        <Constraint layoutClass="org.netbeans.modules.form.compat2.layouts.DesignGridBagLayout" value="org.netbeans.modules.form.compat2.layouts.DesignGridBagLayout$GridBagConstraintsDescription">
          <GridBagConstraints gridX="0" gridY="0" gridWidth="1" gridHeight="1" fill="1" ipadX="0" ipadY="0" insetsTop="0" insetsLeft="0" insetsBottom="0" insetsRight="0" anchor="10" weightX="1.0" weightY="1.0"/>
        </Constraint>
      </Constraints>

      <Layout class="org.netbeans.modules.form.compat2.layouts.support.JTabbedPaneSupportLayout"/>
      <SubComponents>
        <Container class="javax.swing.JScrollPane" name="helpByTopic">
          <Properties>
            <Property name="minimumSize" type="java.awt.Dimension" editor="org.netbeans.beaninfo.editors.DimensionEditor">
              <Dimension value="[500, 800]"/>
            </Property>
            <Property name="preferredSize" type="java.awt.Dimension" editor="org.netbeans.beaninfo.editors.DimensionEditor">
              <Dimension value="[600, 900]"/>
            </Property>
          </Properties>
          <Constraints>
            <Constraint layoutClass="org.netbeans.modules.form.compat2.layouts.support.JTabbedPaneSupportLayout" value="org.netbeans.modules.form.compat2.layouts.support.JTabbedPaneSupportLayout$JTabbedPaneConstraintsDescription">
              <JTabbedPaneConstraints tabName="Topics">
                <Property name="tabTitle" type="java.lang.String" value="Topics"/>
              </JTabbedPaneConstraints>
            </Constraint>
          </Constraints>

          <Layout class="org.netbeans.modules.form.compat2.layouts.support.JScrollPaneSupportLayout"/>
          <SubComponents>
            <Component class="javax.swing.JTextArea" name="helpByTopicList">
              <Properties>
                <Property name="columns" type="int" value="20"/>
                <Property name="font" type="java.awt.Font" editor="org.netbeans.beaninfo.editors.FontEditor">
                  <Font name="Lucida Console" size="13" style="0"/>
                </Property>
                <Property name="rows" type="int" value="5"/>
                <Property name="text" type="java.lang.String" value="Impro-Visor Help By Topic&#xa;&#xa;We give the key-stroke version of most commands. The menus can also be used to refresh your memory.&#xa;&#xa;Grid Lines:&#xa;&#xa;&#x9;Grid lines indicate potential note, rest, and chord starting and ending points. &#xa;&#x9;Grid lines appear in a measure when the mouse is moved over it.&#xa;&#x9;Multiple adjacent grid lines may be selected.&#xa;&#x9;Some commands, such as Advice, only function if a single grid line is selected.&#xa;&#x9;If one or more grid lines are selected, we call this &quot;the selection&quot;.&#xa;&#xa;To select a grid line, or to extend a selection:&#xa;&#xa;&#x9;Selected grid lines are shown by high-lighting the line and any note on it.&#xa;&#xa;&#x9;If no grid line is already selected, shift-click on the desired grid line.&#xa;&#x9;If a grid line is already selected, shift-click twice on the desired grid line.&#xa;&#xa;&#x9;Shift-clicking on a grid line inside the selection causes just that grid line to be selected.&#xa;&#x9;Shift-clicking on a grid line outside the selection extends the selection to include that grid line.&#xa;&#x9;Control-a selects all grid lines at once.&#xa;&#x9;Escape unselects everything.&#xa;&#x9;If a single grid line is selected, it can be moved back and forth using keys f and a.&#xa;&#xa;Entering notes:&#xa;&#xa;&#x9;Click on the intersection of any grid line and staff line or space.&#xa;&#x9;Alternatively, notes can be entered in the text entry field using leadsheet notation.&#xa;&#x9;Accidentals:&#xa;&#x9;&#x9;Use keys e and d to raise and lower notes by half step.&#xa;&#x9;&#x9;Use the space bar to change an accidental enharmonically.&#xa;&#x9;&#x9;Use keys t and g to raise and lower notes by octave.&#xa;&#x9;If you make a mistake entering a note, just click another note on the same grid line.&#xa;&#x9;You may also undo one or more note entry actions with key z.&#xa;&#x9;The duration values of notes will be long when you first click.&#xa;&#x9;Click over the tied portion to enter the next note in a sequence.&#xa;&#x9;If you want a rest, click a note or select a grid line, then press key r.&#xa;&#x9;&#xa;Removing notes:&#xa;&#xa;&#x9;Select the grid line that begins the note you want to remove. Then press either r or x.&#xa;&#x9;Pressing r will replace the note with a rest.&#xa;&#x9;Pressing x will remove the note, but extend the value of the previous note over it.&#xa;&#xa;Extending the duration of a note:&#xa;&#xa;&#x9;If the note to be extended is followed by a rest, select the grid line of that starts the rest,then press x.&#xa;&#xa;Entering chords:&#xa;&#xa;&#x9;Enter the chord names in the text entry field, pressing enter when desired.&#xa;&#x9;Chords will be entered starting at the first grid line selected.&#xa;&#x9;If there is no grid line selected, nothing will happen.&#xa;&#x9;Use bars | to indicate measures.&#xa;&#x9;Chords are spaced evenly within a measure. &#xa;&#x9;Use / to indicate more time for the previous chord.&#xa;&#x9;Example:&#x9;| A B C / |&#x9;means that C gets twice the value that A and B get.&#xa;&#x9;Use keys E and D to raise or lower a chord by half steps.&#xa;&#xa;Copying a selection:&#xa;&#xa;&#x9;First create the selection by shift clicking as described above.&#xa;&#x9;Press c to copy the notes in the selection.&#xa;&#x9;Press C to copy the chords in the selection.&#xa;&#x9;Press control-c to copy both notes and chords.&#xa;&#x9;Copying takes place to a &quot;clip-board&quot; that is not visible.&#xa;&#x9;The copied selection is not removed.&#xa;&#xa;Pasting a selection:&#xa;&#xa;&#x9;Pasting is done from the invisible &quot;clip-board&quot; mentioned above.&#xa;&#x9;First select a single grid line.&#xa;&#x9;Press v to paste the notes previously copied or cut.&#xa;&#x9;Press V to paste the chords previously copied or cut.&#xa;&#x9;Press control-v to paste both notes and chords.&#xa;&#x9;The selection can be pasted multiple times in different positions.&#xa;&#xa;Cutting a selection:&#xa;&#xa;&#x9;Cutting is like copying, except the selection is removed as well.&#xa;&#x9;First create the selection by shift clicking as described above.&#xa;&#x9;Press x to copy the notes in the selection.&#xa;&#x9;Press X to copy the chords in the selection.&#xa;&#x9;Press control-x to copy both notes and chords.&#xa;&#x9;Both cut and copy put notes and chords into the &quot;clip-board&quot;.&#xa;&#xa;Undoing a paste or cut:&#xa;&#xa;&#x9;Use key z to undo.&#xa;&#x9;Multiple undos are allowed.&#xa;&#x9;Use key y to redo something you just undid.&#xa;&#xa;Pasting from the text entry field:&#xa;&#xa;&#x9;Both chords and notes can be entered through the text entry field.&#xa;&#x9;Pressing return enters the contents at the current selection.&#xa;&#x9;One can also select a grid line then re-enter the text entry items at that point as follows:&#xa;&#x9;&#x9;Press b to enter the notes only.&#xa;&#x9;&#x9;Press B to enter the chords only.&#xa;&#x9;&#x9;Press control-b to enter both notes and chords.&#xa;&#xa;Copying a selection from the staff to the text entry:&#xa;&#xa;&#x9;This is a good way to learn leadsheet notation.&#xa;&#x9;Create a selection.&#xa;&#x9;Press j to copy the notes in the selection to the text entry.&#xa;&#x9;Press J to copy the chords in the selection to the text entry.&#xa;&#x9;Press control-j to copy the notes and chords in the selection to the text entry.&#xa;&#xa;Transposing an entire selection:&#xa;&#xa;&#x9;Use d to transpose selected notes down 1/2 step.&#xa; &#x9;Use D to transpose selected chords down 1/2 step.&#xa;&#x9;Use control-d to transpose selected notes and chords down 1/2 step.&#xa;&#x9;Use g to transpose selected notes down an octave.&#xa;&#x9;Use s to transpose selected notes down harmonically about 1/2 step.&#xa;&#xa;&#x9;Use e to transpose selected notes up 1/2 step.&#xa; &#x9;Use E to transpose selected chords up 1/2 step.&#xa;&#x9;Use control-e to transpose selected notes and chords up 1/2 step.&#xa;&#x9;Use t to transpose selected notes up an octave.&#xa;&#x9;Use w to transpose selected notes up harmonically about 1/2 step.&#xa;&#xa;Playing a selection or the entire piece:&#xa;&#xa;&#x9;With the mouse in the staff window, press enter to play the selection (notes and chords).&#xa;&#x9;Press shift-enter to play from the selection to the end of the leadsheet.&#xa;&#x9;Press i to play the entire leadsheet.&#xa;&#x9;Press k to stop playback.&#xa; &#xa;Saving licks, cells, idioms, or quotes:&#xa;&#xa;&#x9;Select what you want to save.&#xa;&#x9;Press u. A dialog will open that allows you to select the type and name the item.&#xa;&#xa;Marking and unmarking licks, cells, idioms, or quotes:&#xa;&#xa;&#x9;Marking allows you to find the marked item in the vocabulary file using a text editor.&#xa;&#x9;Use M to mark a lick, cell, idiom, or quote.&#xa;&#x9;Use m to unmark an already-marked item.&#xa;&#xa;Other composer functions:&#xa;&#xa;&#x9;Use R to rectify (align to harmony) the notes in the selected  melody.&#xa;&#x9;Use / to reverse the notes in the selected  melody.&#xa;&#x9;Use \u005c to invert the notes in the selected melody.&#xa;&#xa;Leadsheet file commands:&#xa;&#xa;&#x9;Use control-o to open an existing leadsheet.&#xa;&#x9;Use control-s to save the current leadsheet under the same name.&#xa;&#x9;Use control-w to save the current leadsheet under a new name.&#xa;&#x9;Use control-r to revert the leadsheet to the last saved version. Changes since then are lost.&#xa;&#x9;Use control-n to open a new leadsheet. The current one stays in its own window.&#xa;&#xa;Miscellaneous:&#xa;&#x9;Use control-l to perform a one-time auto-layout adjustment of the measures per line.&#xa;&#x9;To set a specific number of measures per line: shift click on the line, then select &quot;Over-ride ... &quot;.&#xa;&#x9;Control-q quits improvisor.&#xa;&#xa;&#xa;" containsInvalidXMLChars="true"/>
              </Properties>
              <AuxValues>
                <AuxValue name="JavaCodeGenerator_AddingCodePost" type="java.lang.String" value="helpByTopicList.setEditable(false);"/>
              </AuxValues>
            </Component>
          </SubComponents>
        </Container>
        <Container class="javax.swing.JScrollPane" name="alphaCommandPane">
          <Properties>
            <Property name="minimumSize" type="java.awt.Dimension" editor="org.netbeans.beaninfo.editors.DimensionEditor">
              <Dimension value="[500, 800]"/>
            </Property>
            <Property name="preferredSize" type="java.awt.Dimension" editor="org.netbeans.beaninfo.editors.DimensionEditor">
              <Dimension value="[600, 900]"/>
            </Property>
          </Properties>
          <Constraints>
            <Constraint layoutClass="org.netbeans.modules.form.compat2.layouts.support.JTabbedPaneSupportLayout" value="org.netbeans.modules.form.compat2.layouts.support.JTabbedPaneSupportLayout$JTabbedPaneConstraintsDescription">
              <JTabbedPaneConstraints tabName="Keys">
                <Property name="tabTitle" type="java.lang.String" value="Keys"/>
              </JTabbedPaneConstraints>
            </Constraint>
          </Constraints>

          <Layout class="org.netbeans.modules.form.compat2.layouts.support.JScrollPaneSupportLayout"/>
          <SubComponents>
            <Component class="javax.swing.JTextArea" name="alphaCommandList">
              <Properties>
                <Property name="columns" type="int" value="20"/>
                <Property name="font" type="java.awt.Font" editor="org.netbeans.beaninfo.editors.FontEditor">
                  <Font name="Lucida Console" size="13" style="0"/>
                </Property>
                <Property name="rows" type="int" value="5"/>
                <Property name="text" type="java.lang.String" value="Impro-Visor Key Bindings Alphabetically (^ means hold control key)&#xa;&#xa;Note: Key commands are case-sensitive.&#xa;&#xa;escape&#x9;Unselect everything, also stop playback if playing.&#xa;&#xa;enter&#x9;&#x9;Play selection.&#xa;shift-Enter&#x9;Play from selection to end of sheet.&#xa;&#xa;space&#x9;Toggle enharmonic notes in selection.&#xa;&#xa;a&#x9;Move selection backward to previous grid line.&#xa;^a&#x9;Select all chords and melody.&#xa;&#xa; b&#x9;Enter melody from text entry field.&#xa; B&#x9;Enter chords from text entry field.&#xa;^b&#x9;Enter melody and chords from text entry field.&#xa;&#xa; c&#x9;Copy melody in selection to clipboard.&#xa; C&#x9;Copy chords in selection to clipboard.&#xa;^c&#x9;Copy melody and chords in selection to clipboard.&#xa; &#xa; d&#x9;Transpose selected melody down 1/2 step.&#xa; D&#x9;Transpose selected chords down 1/2 step.&#xa;^d&#x9;Transpose selected melody and chords down 1/2 step.&#xa;&#xa; e&#x9;Transpose selected melody up 1/2 step.&#xa; E&#x9;Transpose selected chords up 1/2 step.&#xa;^e&#x9;Transpose selected melody and chords up 1/2 step.&#xa;&#xa; f&#x9;Move selection forward to next grid line.&#xa;&#xa; g&#x9;Transpose selected melody down one octave.&#xa; ^g&#x9;Open the Lick Generator Controls.&#xa;&#xa; i&#x9;Start playback of entire sheet.&#xa;^i&#x9;Open voicing editor.&#xa;&#xa; j&#x9;Copy melody of selection to text window.&#xa; J&#x9;Copy chords of selection to text window.&#xa;^j&#x9;Copy chords and melody of selection to text window.&#xa;&#xa; k&#x9;Stop playback.&#xa;^k&#x9;Open piano keyboard.&#xa;&#xa;^l&#x9;Perform one-time auto-layout adjustment.&#xa;&#xa; M&#x9;Mark advice cell, idiom, lick, or quote.&#xa; m&#x9;Unmark advice cell, idiom, lick, or quote.&#xa;&#xa;^n&#x9;Start a new leadsheet in addition to the current one.&#xa;&#xa;^o&#x9;Open another leadsheet in place of the current one.&#xa;&#xa; p&#x9;Open preferences dialog.&#xa;^p&#x9;Print leadsheet.&#xa;&#xa;^q&#x9;Quit Impro-Visor.&#xa;&#xa; r&#x9;Add  a rest at selected grid line.&#xa; R&#x9;Rectify melody to the chordal harmony.&#xa;^r&#x9;Revert file to previous save.&#xa;&#xa;s&#x9;Transpose down harmonically.&#xa;^s&#x9;Save leadsheet file.&#xa;&#xa; t&#x9;Transpose selected melody up one octave.&#xa; &#xa; u&#x9;Save selection in the vocabulary as a cell, lick, idiom, or quote.&#xa;&#xa; v&#x9;Paste melody from clipboard.&#xa; V&#x9;Paste chords from clipboard.&#xa;^v&#x9;Paste melody and chords from clipboard.&#xa;&#xa;w&#x9;Transpose up harmonically.&#xa;^w&#x9;Write leadsheet file as a specified name.&#xa;&#xa; x&#x9;Cut melody in selection, saving to clipboard.&#xa; X&#x9;Cut chords in selection, saving to clipboard.&#xa;^x&#x9;Cut melody and chords in selection, saving to clipboard.&#xa;&#xa; y&#x9;Redo undone command.&#xa;&#xa; z&#x9;Undo previous command.&#xa;&#xa; /&#x9;Reverse melody in selection.&#xa; \u005c&#x9;Invert melody in selection.&#xa;&#xa;" containsInvalidXMLChars="true"/>
              </Properties>
              <AuxValues>
                <AuxValue name="JavaCodeGenerator_AddingCodePost" type="java.lang.String" value="alphaCommandList.setEditable(false);"/>
              </AuxValues>
            </Component>
          </SubComponents>
        </Container>
        <Container class="javax.swing.JScrollPane" name="melodyNotation">
          <Properties>
            <Property name="toolTipText" type="java.lang.String" value="Melody notation"/>
            <Property name="minimumSize" type="java.awt.Dimension" editor="org.netbeans.beaninfo.editors.DimensionEditor">
              <Dimension value="[500, 800]"/>
            </Property>
            <Property name="preferredSize" type="java.awt.Dimension" editor="org.netbeans.beaninfo.editors.DimensionEditor">
              <Dimension value="[600, 900]"/>
            </Property>
          </Properties>
          <Constraints>
            <Constraint layoutClass="org.netbeans.modules.form.compat2.layouts.support.JTabbedPaneSupportLayout" value="org.netbeans.modules.form.compat2.layouts.support.JTabbedPaneSupportLayout$JTabbedPaneConstraintsDescription">
              <JTabbedPaneConstraints tabName="Melody">
                <Property name="tabTitle" type="java.lang.String" value="Melody"/>
              </JTabbedPaneConstraints>
            </Constraint>
          </Constraints>

          <Layout class="org.netbeans.modules.form.compat2.layouts.support.JScrollPaneSupportLayout"/>
          <SubComponents>
            <Component class="javax.swing.JTextArea" name="melodyNotationHelp">
              <Properties>
                <Property name="columns" type="int" value="20"/>
                <Property name="font" type="java.awt.Font" editor="org.netbeans.beaninfo.editors.FontEditor">
                  <Font name="Lucida Console" size="13" style="0"/>
                </Property>
                <Property name="rows" type="int" value="5"/>
                <Property name="text" type="java.lang.String" value="Help for the Melody Part of Leadsheet Notation&#xa;&#xa;Note: Melody notation is case-sensitive.&#xa;&#xa;Notes must begin with a lower-case letter: a, b, c, d, e, f, g.&#xa;&#xa;A modifier # (sharp) or b (flat) may follow optionally.&#xa;&#xa;Notes are in the octave middle c and just above. &#xa;To specify a higher octave add a plus (+) for each octave. &#xa;To specify a lower octave add a minus (-) for each octave lower.&#xa;&#xa;The duration of a note is specified by numbers:&#xa;&#xa;    1  = whole note&#xa;    2  = half note&#xa;    4  = quarter note&#xa;    8  = eighth note&#xa;    16 = sixteenth note&#xa;    32 = thirty-second note&#xa;&#xa;Following a number by a dot (.) multiplies the value by 1.5. &#xa;&#xa;Following a number by /3 gives the value of a triplet (2/3 of the original value).&#xa;&#xa;Durations can be augmented by following a basic duration with a plus (+)&#xa;then the added duration.&#xa;&#xa;If no duration is specified, an eighth note will be used.&#xa;&#xa;Examples:&#xa;&#xa;    a8    an &apos;a&apos; above middle c, eighth note&#xa;    eb8   an e-flat above middle c, eighth note&#xa;    d+4   a &apos;d&apos; in the second octave above middle c, quarter note&#xa;    g-4/3 a &apos;g&apos; in the octave below middle c, quarter-note triplet&#xa;    c#4.  a c-sharp in the octave above middle c, dotted quarter note&#xa;    f+2+8 an f in the second octave above middle c, half note plus an eighth&#xa;&#xa;To see how any given note can be rendered in this notation, &#xa;enter it in the GUI using point-and-click,&#xa;then use j to transfer it to the text entry field.&#xa;&#xa;"/>
              </Properties>
              <AuxValues>
                <AuxValue name="JavaCodeGenerator_AddingCodePost" type="java.lang.String" value="melodyNotationHelp.setEditable(false);"/>
              </AuxValues>
            </Component>
          </SubComponents>
        </Container>
        <Container class="javax.swing.JScrollPane" name="styleHelpPane">
          <Properties>
            <Property name="minimumSize" type="java.awt.Dimension" editor="org.netbeans.beaninfo.editors.DimensionEditor">
              <Dimension value="[500, 800]"/>
            </Property>
            <Property name="preferredSize" type="java.awt.Dimension" editor="org.netbeans.beaninfo.editors.DimensionEditor">
              <Dimension value="[600, 900]"/>
            </Property>
          </Properties>
          <Constraints>
            <Constraint layoutClass="org.netbeans.modules.form.compat2.layouts.support.JTabbedPaneSupportLayout" value="org.netbeans.modules.form.compat2.layouts.support.JTabbedPaneSupportLayout$JTabbedPaneConstraintsDescription">
              <JTabbedPaneConstraints tabName="Style">
                <Property name="tabTitle" type="java.lang.String" value="Style"/>
              </JTabbedPaneConstraints>
            </Constraint>
          </Constraints>

          <Layout class="org.netbeans.modules.form.compat2.layouts.support.JScrollPaneSupportLayout"/>
          <SubComponents>
            <Component class="javax.swing.JTextArea" name="styleHelpList1">
              <Properties>
                <Property name="columns" type="int" value="20"/>
                <Property name="font" type="java.awt.Font" editor="org.netbeans.beaninfo.editors.FontEditor">
                  <Font name="Lucida Console" size="13" style="0"/>
                </Property>
                <Property name="rows" type="int" value="5"/>
                <Property name="text" type="java.lang.String" value="Help for Style Notation&#xa;&#xa;Styles are responsible for Impro-Visor&apos;s playback accompaniment.  Styles &#xa;are specified in the vocabulary file as a set of patterns for each instrument&#xa;of the accompaniment.  There are also style parameters that determine how&#xa;the patterns are used.&#xa;&#xa;Patterns&#xa;&#xa;Each pattern is defined by a set of rules.  The rules are similar to&#xa;leadsheet notation, except the pitch is replaced with a capital letter&#xa;indicating the rule.  Each pattern also has a weight that determines how&#xa;often that pattern is used in relation to other patterns of the same length.&#xa;&#xa;Chord Patterns&#xa;&#xa;Chord patterns determine only the rhythm of the chord accompaniment. (The &#xa;voicings to use are decided based on a voice-leading algorithm.)&#xa;&#xa;Chord patterns use the following rules:&#xa;&#xa;X       Strike the chord&#xa;R       A rest&#xa;&#xa;Bass Patterns&#xa;&#xa;Bass patterns determine both the rhythm of the bassline and the type of&#xa;notes that are chosen.&#xa;&#xa;Bass patterns use the following rules, where d is a duration, such as&#xa;4 for a quarter-note, 8 for an eighth-note, etc.&#xa;&#xa;Bd      The bass note (either the root of the chord, or the note specified&#xa;        as part of a slash chord)&#xa;&#xa;Cd      A note from the current chord&#xa;&#xa;Sd      A note from the first scale associated with the current chord&#xa;&#xa;Ad      A tone that approaches the bass note of the next chord&#xa;&#xa;Nd      The bass note of the next chord (if at the end of a pattern&#xa;        it will tie over to the next pattern)&#xa;&#xa;Rd      A rest of duration d&#xa;&#xa;=d      The same note as the previous note, ignoring rests.&#xa;&#xa;(X n d) A specific note from the first scale given for a chord in&#xa;        the vocabulary. For example (X 5 4) will give a quarter-note&#xa;        on the fifth-degree of the scale.&#xa;&#xa;(X bn d) or (X #n d)&#xa;        A specific note from the first scale given for a chord in&#xa;        the vocabulary, lowered or raised a half step using standard&#xa;        flat/sharp notation.  For example (X b5 4) will give a&#xa;        quarter-note on a half step below the fifth-degree of the scale.&#xa;&#xa;U/D notation&#xa;        When inputting multiple notes into a bass pattern, placing&#xa;        U or D between notes will guarantee a rise or drop from the&#xa;        first note to the next.  For example, B4 U C4 D (X 2 4)&#xa;        will give a bass note, followed by an ascending color tone,&#xa;        followed by a descending second-degree note.       &#xa;&#xa;&#xa;Drum Patterns&#xa;&#xa;Drum patterns are a bit more complicated in that for one pattern you must&#xa;specify a drum &quot;rule&quot; for each drum you want in the pattern.  Here is the&#xa;format for a drum rule specification:&#xa;&#xa;(drum DRUM-MIDI-NUMBER RULE RULE ...)&#xa;&#xa;Drum patterns use the following rules:&#xa;&#xa;X       Strike the drum&#xa;R       A rest&#xa;&#xa;General MIDI Drum Numbers:&#xa;&#xa;35      Acoustic Bass Drum      59      Ride Cymbal 2&#xa;36      Bass Drum 1             60      Hi Bongo&#xa;37      Side Stick              61      Low Bongo&#xa;38      Acoustic Snare          62      Mute Hi Conga&#xa;39      Hand Clap               63      Open Hi Conga&#xa;40      Electric Snare          64      Low Conga&#xa;41      Low Floor Tom           65      High Timbale&#xa;42      Closed Hi-Hat           66      Low Timbale&#xa;43      High Floor Tom          67      High Agogo&#xa;44      Pedal Hi-Hat            68      Low Agogo&#xa;45      Low Tom                 69      Cabasa&#xa;46      Open Hi-Hat             70      Maracas&#xa;47      Low-Mid Tom             71      Short Whistle&#xa;48      Hi-Mid Tom              72      Long Whistle&#xa;49      Crash Cymbal 1          73      Short Guiro&#xa;50      High Tom                74      Long Guiro&#xa;51      Ride Cymbal 1           75      Claves&#xa;52      Chinese Cymbal          76      Hi Wood Block&#xa;53      Ride Bell               77      Low Wood Block&#xa;54      Tambourine              78      Mute Cuica&#xa;55      Splash Cymbal           79      Open Cuica&#xa;56      Cowbell                 80      Mute Triangle&#xa;57      Crash Cymbal 2          81      Open Triangle&#xa;58      Vibraslap&#xa;&#xa;Style Parameters&#xa;&#xa;name            The name of the style&#xa;swing           The swing value for the style&#xa;comp-swing&#x9;The swing value for the accompaniment parts of the style&#xa;bass-high       The highest note in the bass&apos;s range&#xa;bass-low        The lowest note in the bass&apos;s range&#xa;bass-base       A note that specifies the starting area for the bassline&#xa;chord-high      The highest note in the chord&apos;s range&#xa;chord-low       The lowest note in the chord&apos;s range&#xa;voicing-type    Sets the voicing type to be used&#xa;&#xa;Example Style&#xa;&#xa;(style&#xa;    (name swing)&#xa;    (swing 0.67)&#xa;    (comp-swing 0.67)&#xa;    &#xa;    (bass-high g-)&#xa;    (bass-low g---)&#xa;    (bass-base c--)&#xa;    &#xa;    (bass-pattern (rules B4 S4 C4 A4) (weight 10))&#xa;    (bass-pattern (rules B4 C4 C4 A4) (weight 5))&#xa;    (bass-pattern (rules B4 S4 C4 S4) (weight 3))&#xa;    (bass-pattern (rules B4 S4 C4 A8 A8) (weight 3))&#xa;    (bass-pattern (rules B4 S4 C4 S8 A8) (weight 3))&#xa;    (bass-pattern (rules B4 C4) (weight 5))&#xa;    (bass-pattern (rules B4 C8 A8) (weight 5))&#xa;    (bass-pattern (rules B4 S4) (weight 3))&#xa;    (bass-pattern (rules B4) (weight 5))&#xa;    (bass-pattern (rules B4 A4) (weight 2))&#xa;    &#xa;    (drum-pattern&#xa;        (drum 51 X4 X8 X8 X4 X8 X8)&#xa;        (weight 10)&#xa;        )&#xa;    (drum-pattern&#xa;        (drum 51 X4 X8 X8)&#xa;        (weight 10)&#xa;        )&#xa;    (drum-pattern&#xa;        (drum 51 X4)&#xa;        (weight 10)&#xa;        )&#xa;        &#xa;    (voicing-type closed)&#xa;    (chord-high a)&#xa;    (chord-low c-)&#xa;    &#xa;    (chord-pattern (rules X1) (weight 7))&#xa;    (chord-pattern (rules X2) (weight 7))&#xa;    (chord-pattern (rules X4) (weight 7))&#xa;    (chord-pattern (rules X2+4 X4) (weight 5))&#xa;    (chord-pattern (rules X4 R2+4) (weight 5))&#xa;    (chord-pattern (rules X2 R2) (weight 7))&#xa;    (chord-pattern (rules R4) (weight 1))&#xa;    (chord-pattern (rules R8 X8+4 X4 R4) (weight 3))&#xa;    (chord-pattern (rules R4 X8+4 X8 R4) (weight 5))&#xa;    (chord-pattern (rules X8+2 X4 X8) (weight 2))&#xa;    )&#xa;&#xa;Style Tips&#xa;&#xa;   * The lengths of the patterns are important.  The software will attempt&#xa;     to fill space with the largest pattern it can.  Try to correspond pattern&#xa;     lengths to the probable chord durations.  If chords will mostly last for&#xa;     4 beats, then have a 4 beat pattern.  If chords will last for 8 beats,&#xa;     the software can fill that in with two 4 beat patterns.  Having a 1 beat&#xa;     pattern for each accompaniment instrument is a good idea as a failsafe&#xa;     for unconventional chord durations.&#xa;&#xa;   * Adding the parameter (no-style) to your style will cause the software&#xa;     to leave out any bassline or drum part and play chords exactly where &#xa;     they are specified on the leadsheet.&#xa;&#xa;   * Look to the styles included in the vocabulary file as a guide to&#xa;     creating your own styles.&#xa;&#xa;   * Don&apos;t be afraid to experiment, but also don&apos;t be afraid to keep &#xa;     things simple.&#xa;"/>
              </Properties>
              <AuxValues>
                <AuxValue name="JavaCodeGenerator_AddingCodePost" type="java.lang.String" value="styleHelpList1.setEditable(false);"/>
              </AuxValues>
            </Component>
          </SubComponents>
        </Container>
        <Container class="javax.swing.JScrollPane" name="drawingHelpPane">
          <Properties>
            <Property name="minimumSize" type="java.awt.Dimension" editor="org.netbeans.beaninfo.editors.DimensionEditor">
              <Dimension value="[500, 800]"/>
            </Property>
            <Property name="preferredSize" type="java.awt.Dimension" editor="org.netbeans.beaninfo.editors.DimensionEditor">
              <Dimension value="[600, 900]"/>
            </Property>
          </Properties>
          <Constraints>
            <Constraint layoutClass="org.netbeans.modules.form.compat2.layouts.support.JTabbedPaneSupportLayout" value="org.netbeans.modules.form.compat2.layouts.support.JTabbedPaneSupportLayout$JTabbedPaneConstraintsDescription">
              <JTabbedPaneConstraints tabName="Drawing">
                <Property name="tabTitle" type="java.lang.String" value="Drawing"/>
              </JTabbedPaneConstraints>
            </Constraint>
          </Constraints>

          <Layout class="org.netbeans.modules.form.compat2.layouts.support.JScrollPaneSupportLayout"/>
          <SubComponents>
            <Component class="javax.swing.JTextArea" name="drawingHelp">
              <Properties>
                <Property name="columns" type="int" value="20"/>
                <Property name="font" type="java.awt.Font" editor="org.netbeans.beaninfo.editors.FontEditor">
                  <Font name="Lucida Console" size="13" style="0"/>
                </Property>
                <Property name="rows" type="int" value="5"/>
                <Property name="text" type="java.lang.String" value="Help for Using the Draw (pencil) Tool&#xa;&#xa;The Draw (pencil) tool allows you to input notes quickly by dragging the &#xa;mouse continuously over the stave.  This makes it easy to sketch out &#xa;the &apos;melody contour&apos; of your solo fluidly, without having to click at each&#xa;individual space.&#xa;&#xa;Note Fitting&#xa;&#xa;The Draw tool does its best to fit notes along the curve you draw.  That is,&#xa;it will add the pitch that roughly correponds to the stave note under&#xa;the cursor.  Since a melody contour defines the shape of the pitches&#xa;in the music - but not necessarily specific pitches - the Draw tool allows&#xa;you to ignore harmonic rules when sketching out this shape; it will match&#xa;pitches to the nearest harmonious ones, for the current chord.  When&#xa;no chord (&quot;NC&quot;) is in effect, the Draw tool fits notes using the major&#xa;scale of the score&apos;s key.&#xa;&#xa;Note Duration&#xa;&#xa;The duration of notes on the drawn contour is determined by the note-&#xa;spacing you can set below each measure.  If you want a triplet, for &#xa;example, in a particular measure, you can simply set the rhythm there&#xa;(by dragging out the note spacing) and draw over that measure.  Notes&#xa;will automatically be fitted along the curve you draw, to that rhythm.&#xa;&#xa;Drawing Tips&#xa;&#xa;   * You can extend a note while drawing by holding the Shift key.  This&#xa;     will &apos;flatline&apos; the melody contour and increase the duration of the&#xa;     current note being drawn. &#xa;&#xa;   * To add rest while drawing, you can hold the Control key.  Drawing&#xa;     over the stave with Control down will insert rest there.  You may&#xa;     also press &apos;R&apos; while a given note is selected to insert rest there.&#xa;&#xa;   * When drawing over chord changes, you may want to force a tone&#xa;     that &apos;approaches&apos; the change before a given chord.  By holding&#xa;     Shift-A, the Draw tool will always add an approach tone before a&#xa;     chord change, and then resolve to the nearest chord tone.&#xa;&#xa;   * If you draw too quickly, the tool might &quot;miss&quot; a note, and not fit&#xa;     it to the curve right away.  Don&apos;t panic!  Any notes that aren&apos;t fitted&#xa;     properly will conform to the curve once you release the mouse button.&#xa;&#xa;   * Post-edit!  If you want to change a note or two, edit them after you&#xa;     finish sketching.  Adjusting the pitch is easy; just drag up and down&#xa;     on a note.  Using the keyboard controls, it&apos;s also easy to add rest&#xa;     or extend notes afterwards.&#xa;&#xa;   * Want to hear the notes as they&apos;re being drawn?  Unmute the entry&#xa;     sounds on the mixer, and Impro-Visor will remember your &#xa;     preference during this session.  If you always want to hear them&#xa;     by default, you may toggle the default settings under &#xa;     &quot;Preferences -&gt; Contour Drawing&quot;.&#xa;&#xa;   * Maybe you only want the Draw tool to add chord tones or color&#xa;     tones, rather than all scale tones.  Impro-Visor allows you to &#xa;     set the Draw tool pitches under &quot;Preferences -&gt; Contour Drawing&quot;.&#xa;"/>
              </Properties>
              <AuxValues>
                <AuxValue name="JavaCodeGenerator_AddingCodePost" type="java.lang.String" value="drawingHelp.setEditable(false);"/>
              </AuxValues>
            </Component>
          </SubComponents>
        </Container>
        <Container class="javax.swing.JScrollPane" name="roadmapHelpPane">
          <Properties>
            <Property name="minimumSize" type="java.awt.Dimension" editor="org.netbeans.beaninfo.editors.DimensionEditor">
              <Dimension value="[500, 800]"/>
            </Property>
            <Property name="preferredSize" type="java.awt.Dimension" editor="org.netbeans.beaninfo.editors.DimensionEditor">
              <Dimension value="[600, 900]"/>
            </Property>
          </Properties>
          <Constraints>
            <Constraint layoutClass="org.netbeans.modules.form.compat2.layouts.support.JTabbedPaneSupportLayout" value="org.netbeans.modules.form.compat2.layouts.support.JTabbedPaneSupportLayout$JTabbedPaneConstraintsDescription">
              <JTabbedPaneConstraints tabName="Roadmap">
                <Property name="tabTitle" type="java.lang.String" value="Roadmap"/>
              </JTabbedPaneConstraints>
            </Constraint>
          </Constraints>

          <Layout class="org.netbeans.modules.form.compat2.layouts.support.JScrollPaneSupportLayout"/>
          <SubComponents>
            <Component class="javax.swing.JTextArea" name="roadmapHelp">
              <Properties>
                <Property name="columns" type="int" value="20"/>
                <Property name="font" type="java.awt.Font" editor="org.netbeans.beaninfo.editors.FontEditor">
                  <Font name="Lucida Console" size="13" style="0"/>
                </Property>
                <Property name="rows" type="int" value="5"/>
                <Property name="text" type="java.lang.String" value="Help for Using the Roadmap Mode&#xa;&#xa;Using Roadmaps&#xa;&#xa;Roadmaps allow for viewing and manipulation of a leadsheet from a larger&#xa;perspective, focused on the chord progressions that make up a given song.&#xa;Using a roadmap makes it fast and easy to move and transpose whole chords&#xa;and chord sequences, and to visualize the structure of a song in terms of&#xa;&quot;bricks&quot;, or common chord sequences used to construct jazz tunes.&#xa;&#xa;Opening a Roadmap&#xa;&#xa;When you wish to open a road map, you have a choice of how it will open:&#xa;&#xa;   * if you only want an empty roadmap, you can type Ctrl-&apos;;&apos; to open a&#xa;     roadmap describing a blank leadsheet.&#xa;&#xa;   * if you want a roadmap containing the chords of the song you have&#xa;     open, press &apos;;&apos; and a roadmap will open with all the chords from &#xa;     the currently active leadsheet. &#xa;&#xa;   * if you want a roadmap with your current song, but converted into&#xa;     bricks, press Shift-&apos;;&apos; and a roadmap will generate containing the&#xa;     chords of the current leadsheet grouped together as chord bricks.&#xa;&#xa;All of these options are also available by opening the Roadmap menu on a &#xa;leadsheet.&#xa;&#xa;If you want a roadmap to open whenever you open a leadsheet, you can go to&#xa;the Roadmap menu and click &quot;Generate roadmap on Opening Leadsheet&quot; to enable the&#xa;setting. When this option is checked, any time a leadsheet is opened a &#xa;corresponding roadmap will open with the chords grouped into bricks.&#xa;&#xa;When a roadmap is open, you can use the File -&gt; Open Leadsheet option to&#xa;select a different leadsheet to roadmap. Alternately, if you want to navigate&#xa;through a series of files in one directory, you can use the arrows just below&#xa;the File menu to step back and forth between roadmaps based on alphabetical &#xa;ordering of the leadsheet file names.&#xa;&#xa;If you have modified a roadmap and wish to convert it back into an appropriate&#xa;leadsheet, you can use the Leadsheet menu to either put the selected chords &#xa;(or all the chords if none are selected) into a new leadsheet or append them to&#xa;the current leadsheet.&#xa;&#xa; &#xa;Reading a Roadmap&#xa;&#xa;In the primary pane of a roadmap window, you can see a graphical representation &#xa;of the chords from an opened leadsheet (or no chords at all). The chords will&#xa;be displayed as a list of &quot;blocks&quot;: either individual chords or chords grouped&#xa;together into &quot;bricks&quot;.&#xa;&#xa;There are three levels to a road map: the key level, the block level, and the &#xa;chord level. At the top level is a color-coded key map, which shows the general&#xa;key at a certain point in a tune. The coloration is based upon position around&#xa;the circle of fifths; the nearer two colors are in the spectrum, the closer they&#xa;are in the circle of fifths. If the key is minor or dominant rather than major,&#xa;it takes the color of its relative major counterpart. If you don&apos;t like the &#xa;coloration, you can always go to File -&gt; Roadmap Information and uncheck &quot;Key&#xa;Coloration&quot;.&#xa;&#xa;Next, at the block level, one can see the names of any bricks present. An &#xa;unanalyzed piece will have no names here, as everything will be broken into&#xa;chords. When analyzed, the names of bricks grouping these chords together &#xa;will appear in the middle bar if any such grouping exists. If a brick overlaps&#xa;another brick, a &quot;+ ...&quot; will appear. If insufficient space exists to display&#xa;the brick&apos;s full name, you&apos;ll just see a &quot;...&quot;. To see the full name, mouse &#xa;over the brick.&#xa;&#xa;Finally, the chords themselves are shown at the bottom level with their durations.&#xa;These can be any chords accepted by Impro-Visor itself, and will usually be pulled&#xa;from the leadsheet open in Impro-Visor&apos;s main window.&#xa;&#xa;Sometimes, below the end of a brick, a yellow box with a word will appear. This&#xa;describes the kind of &quot;join&quot; that exists between two blocks. Joins are named &#xa;based upon the interval between the key of two blocks:a Homer joins two bricks &#xa;in the same key, a Cherokee joins two bricks with the second a half-step up from&#xa;the first, , a Woody joins two bricks a whole step apart, etc. The list of all &#xa;joins in order based on number of half-steps up the second key is from the&#xa;first key is: &#xa;         0: Homer (same key)           6:  Stella (tritone)&#xa;         1: Cherokee (half step up)    7:  Backslider (fourth down)&#xa;         2: Woody (whole step up)      8:  Half Nelson (major third down)&#xa;         3: Highjump (minor third up)  9:  Sidewinder (minor third down)&#xa;         4: Bauble (major third up)    10: New Horizon (whole step down)&#xa;         5: Bootstrap (fourth up)      11: Downwinder (half step down)&#xa;&#xa;These joins will only appear between a brick ending in a stable chord and a &#xa;brick beginning in an unstable chord, so don&apos;t be surprised if there are&#xa;not joins between all bricks.&#xa;&#xa;Ends of blocks will sometimes have a doubled line. This indicates that the&#xa;block is the end of a section (two thick lines) or a phrase (a thin line and a&#xa;thick line). Sections and phrases are notated in a leadsheet file with the &#xa;parenthetical expressions &#xa;  (section (style = [style name]))&#xa;and&#xa;  (phrase)&#xa;respectively. These help both to display the roadmap in a way that keeps&#xa;sections distinct and to keep analysis from making bricks that overlap two&#xa;sections or phrases.&#xa;&#xa;If you wish to change the width of the contents of the roadmap, you can use&#xa;the Feature Width slider on the top toolbar to make the contents more easily&#xa;viewable. If brick names are difficult to view due to the feature width, you&#xa;can mouse over difficult-to-view bricks and the full name will show.&#xa;&#xa;&#xa;Brick Dictionary&#xa;&#xa;The Brick Dictionary contains a list of possible bricks for you to use in&#xa;a given piece. This also is the list of possible bricks that could appear in&#xa;the analyzed version of a piece. Each brick has a type which describes the&#xa;purpose that brick serves in a given piece: sometimes, a &quot;Cadence&quot;, for &#xa;instance, starts from an unresolved chord and progresses to a resolution.&#xa;&#xa;You can select a brick in the dictionary by navigating through the tree, first&#xa;looking for the type, then the brick name. Sometimes, a brick will have several&#xa;variants; in this case, you can either select the folder with that name to get&#xa;the default, or you can open the folder to view one of the brick variants.&#xa;&#xa;When a brick is selected, it displays in the Brick Preview pane as it would if&#xa;it were inserted into the roadmap. From there, one can use the drop-down menus&#xa;below the dictionary to select the key of a given brick or the relative duration&#xa;of the brick. When one is satisfied with the appearance of a given brick, one &#xa;can drag it from the brick preview pane to the desired location in the current &#xa;roadmap to insert it.&#xa;&#xa;If you don&apos;t want to see a brick in the library or on the roadmap, you can &#xa;select the brick in the tree and then press the &quot;Delete Selected Library Brick&quot;&#xa;button. This will take the brick out of the visible library. Careful when you&#xa;delete a brick, though: if you want to restore it in the dictionary, you will&#xa;need to open the BrickDictionary.txt file in the &quot;vocab&quot; folder of the &#xa;Impro-Visor application, find the definition, and change the word &quot;Invisible&quot;&#xa;back to the correct brick type.&#xa;&#xa;&#xa;Manipulating the Roadmap&#xa;&#xa;In order to change either parts or the entirety of the roadmap, you have to &#xa;select the parts of the roadmap you wish to change. You can select these parts&#xa;by clicking on them. To select a single block, click on it. To select multiple,&#xa;click on the starting block, then hold Shift and click on the ending block. All&#xa;the blocks from the first to the second will be selected. If you wish to select&#xa;the entire leadsheet, type &quot;A&quot; or click &quot;Select All&quot; in the Edit menu..&#xa;&#xa;When you have a selection, you can perform several transformations on the &#xa;selected block(s):&#xa;&#xa;   * To transpose the key up a semitone, press &quot;E&quot;; to transpose it down a &#xa;     semitone, press &quot;D&quot;.&#xa;&#xa;   * You can change the duration of a given selection by selecting the &quot;Scale&#xa;     Duration&quot; menu in the top toolbar. It will scale the selection to the &#xa;     given fraction or multiple of the current duration.&#xa;&#xa;   * You can cut or copy a set of chords by pressing &quot;X&quot; or &quot;C&quot;, respectively.&#xa;     These can then be pasted before a selection (or at the end of the chord&#xa;     sequence if there is no selection) by typing &quot;V&quot; later. These operations &#xa;     are also all available in the Edit menu.&#xa;&#xa;   * To delete the selection, press the Delete/Backspace key. You can also&#xa;     delete selections from the Edit menu.&#xa;&#xa;   * You can undo a modification by pressing &quot;Z&quot;. If you wish to redo the &#xa;     operation, pressing &quot;Y&quot; will return the roadmap to the state before the&#xa;     undo. These operations are also available in the Edit menu.&#xa;&#xa;   * You can modify a particular chord by clicking on the chord name itself&#xa;     within a selection. If you double-click the chord, you can change its name&#xa;     and duration. Only valid chord names will be accepted. Changing a chord in&#xa;     a brick will break the brick up.&#xa;&#xa;   * To &quot;break&quot; a selection into the blocks that make it up, click on the &#xa;     &quot;Break&quot; button in the top toolbar, or select &quot;Break Selection&quot; in the &#xa;    Edit menu. &#xa;&#xa;   * To &quot;flatten&quot; a selection into the chords that make it up, click on the&#xa;     &quot;Flatten button in the top toolbar, or select &quot;Flatten Selection&quot; in the&#xa;     Edit menu.&#xa;&#xa;   * To add a selection as a new brick in the Brick Library, click the &quot;New&#xa;     Brick&quot; button in the top toolbar. This will open a dialog window where you&#xa;     can name the brick and select its key, type, and mode.&#xa;&#xa;   * One of the most useful tools in the roadmap is the Analyze button, which &#xa;     will take the whole piece or a selection and split it into the best &#xa;     combination of bricks it can find. Generally, this will take a few seconds,&#xa;     so be patient. If you aren&apos;t happy with the resulting bricks, try taking &#xa;     selections from what you want to analyze and analyzing them individually,&#xa;     or redefining where section divisions are in the roadmap.&#xa;&#xa;   * To change whether or not a given selection ends a section, you can type&#xa;     Return or click &quot;Toggle Section&quot; in the Section menu. Alternatively, if you&#xa;     wish for the selection to be the end of a phrase, you can type Shift+Return&#xa;     or click &quot;Toggle Phrase&quot; in the Section menu. A brick can end either a &#xa;     section or a phrase, but not both.&#xa;&#xa;Additionally, the Roadmap supports playback of a given selection. If you press&#xa;the &quot;play&quot; button (the triangle on the top toolbar), a MIDI matching the chords&#xa;for a given section and the style on the leadsheet will play. Hitting the &quot;stop&quot;&#xa;button (the square on the top toolbar) will stop playback, and one can toggle&#xa;whether the playback will loop or not by clicking the &quot;Loop&quot; button on the top&#xa;toolbar. If nothing is selected, playback will default to the whole of the tune.&#xa;&#xa;&#xa;"/>
              </Properties>
              <AuxValues>
                <AuxValue name="JavaCodeGenerator_AddingCodePost" type="java.lang.String" value="roadmapHelp.setEditable(false);"/>
              </AuxValues>
            </Component>
          </SubComponents>
        </Container>
        <Container class="javax.swing.JScrollPane" name="lickGenSettingsPane">
          <Properties>
            <Property name="minimumSize" type="java.awt.Dimension" editor="org.netbeans.beaninfo.editors.DimensionEditor">
              <Dimension value="[500, 800]"/>
            </Property>
            <Property name="preferredSize" type="java.awt.Dimension" editor="org.netbeans.beaninfo.editors.DimensionEditor">
              <Dimension value="[600, 900]"/>
            </Property>
          </Properties>
          <Constraints>
            <Constraint layoutClass="org.netbeans.modules.form.compat2.layouts.support.JTabbedPaneSupportLayout" value="org.netbeans.modules.form.compat2.layouts.support.JTabbedPaneSupportLayout$JTabbedPaneConstraintsDescription">
              <JTabbedPaneConstraints tabName="Lick Generator">
                <Property name="tabTitle" type="java.lang.String" value="Lick Generator"/>
              </JTabbedPaneConstraints>
            </Constraint>
          </Constraints>

          <Layout class="org.netbeans.modules.form.compat2.layouts.support.JScrollPaneSupportLayout"/>
          <SubComponents>
            <Component class="javax.swing.JTextArea" name="lickGenSettings">
              <Properties>
                <Property name="columns" type="int" value="20"/>
                <Property name="font" type="java.awt.Font" editor="org.netbeans.beaninfo.editors.FontEditor">
                  <Font name="Lucida Console" size="13" style="0"/>
                </Property>
                <Property name="rows" type="int" value="5"/>
                <Property name="text" type="java.lang.String" value="Help for the Lick Generator&#xa;&#xa;The lick generator and triage tool is a powerful and customizable&#xa;utility that will create original licks over a given series of chord&#xa;changes.&#xa;&#xa;The lick generator creates things in two steps; first, it generates&#xa;a rhythm using a context-free grammar.  Then, it fills in this&#xa;rhythm probabilistically.  This allows for a large variety of &#xa;different melodys.  The grammar is specified in the text field under&#xa;&quot;Grammar File.&quot;  This file is customizable and uses the following&#xa;format for terminal values:&#xa;&#xa;&lt;Note type&gt;&lt;Value&gt;&#xa;&#xa;Note type can be one of&#xa;     * X - any note&#xa;     * R - a rest&#xa;     * C - a chord tone (as specified in the vocabulary file)&#xa;     * L - a color tone (as specified in the vocabulary file)&#xa;     * S - a scale tone (as specified by the user.  If &quot;None&quot; is chosen, &#xa;&#x9;this is ignored.  If use first scale is chosen, it looks&#xa;&#x9;at the first scale in the vocabulary file associated &#xa;&#x9;with the given chord.  If there is no such scale, this&#xa;&#x9;is ignored).&#xa;     * A - an approach tone (forces the following note to be a&#xa; &#x9;chord tone, and approaches from a half step&#xa;&#x9;above or below).&#xa;&#xa;Value can be from 1 (4 beats) to 16/3 (sixteenth note triplets).  &#xa;Longer note values are not currently supported in the grammar.&#xa;&#xa;For a more detailed explanation of how to modify the grammar&#xa;file, please see the &quot;Lick Generator&quot; tutorial.&#xa;&#xa;A few notes on parameter setting in grammars:&#xa;The expectancy for the generated line is calculated as &#xa;(expectancy-multiplier)(expectancy value of previous line) + &#xa;(normalized expectancy-constant (where 1 is the highest value)). &#xa;A higher expectancy value means more highly expected notes will show up &#xa;in the generated line.&#xa;While this gives many options for expectancies, most users will not find&#xa;a use for expectancy-multiplier that is not 1 or 0 (i.e. follows the user or&#xa;uses a constant expectancy value).&#xa;Expectancy-constant can range from 0 to 1 but a pretty normal value for&#xa;this is around a 0.6 to 0.7&#xa;&#xa;The syncopation-multiplier and syncopation-constant work in exactly &#xa;the same way but a typical value for syncopation-constant is around 0.15&#xa;&#xa;If you do not wish to use the context-free grammar to generate a&#xa;rhythm, deselect the &quot;Use Grammar&quot; button.  This tends to create&#xa;less listenable fragments, however.&#xa;&#xa;By default, the lick generator will tend to avoid repeating the same&#xa;note multiple times in a row.  If you would like to turn this off,&#xa;deselect the &quot;Avoid Repeat Pitch&quot; button.&#xa;&#xa;&quot;Generate&quot; creates a rhythm and fills it in using the probabilities.&#xa;&#xa;&quot;Generate Rhythm&quot; only creates a rhythm.&#xa;&#xa;&quot;Fill Melody&quot; generates a melody for a given rhythm (the rhythm&#xa;is specified in the large text box; note that you can manually enter&#xa;longer note values here using leadsheet notation, as in X2+4 for&#xa;a three beat note)&#xa;&#xa;&quot;Get Selected Rhythm&quot; will read the rhythmic pattern of whatever&#xa;is currently selected.&#xa;&#xa;&quot;Replay&quot; replays the current selection.&#xa;&#xa;&quot;Help&quot; displays this dialog.&#xa;&#xa;&quot;Reload&quot; will re-parse the grammar file.&#xa;&#xa;&quot;Save Lick&quot; saves the lick into the vocabulary.&#xa;&#xa;The lick generator will automatically determine note probabilities &#xa;for all chords in the from the current selection start up to the&#xa;total number of beats specified.  If you would like to disable this&#xa;feature, deselect the &quot;Auto-fill probabilities&quot; check box.  The&#xa;&quot;Fill&quot; button will reset them to their defaults, and the &quot;Clear&quot; button&#xa;sets them all to zero.&#xa;&#xa;Other options:&#xa;     * Min/Max Pitch: Do not use pitches higher or lower than these&#xa;&#x9;values.&#xa;&#xa;     * Min/Max Interval: Do not jump higher or lower than this interval&#xa;&#x9;unless a jump probability is set.&#xa;&#xa;     * Min/Max Duration (only used if the grammar is disabled): Do&#xa;&#x9;not generate notes with rhythmic values longer or&#xa;&#x9;shorter than these; note that these are inverse, so&#xa;&#x9;32 indicates a 32nd note and 1 indicates a whole note.&#xa;&#xa;     * Beats: The length of the lick to generate in beats.  This value is &#xa;&#x9;based off of the current selection.&#xa;&#xa;     * Rest Probability (only used if the grammar is disabled): The&#xa;&#x9;probability of a given note being a rest.&#xa;&#xa;     * Leap Probability: The probability of jumping outside the&#xa;&#x9;maximum interval (see above)."/>
              </Properties>
              <AuxValues>
                <AuxValue name="JavaCodeGenerator_AddingCodePost" type="java.lang.String" value="lickGenSettings.setEditable(false);"/>
              </AuxValues>
            </Component>
          </SubComponents>
        </Container>
        <Container class="javax.swing.JScrollPane" name="SoloGenerator">
          <Properties>
            <Property name="minimumSize" type="java.awt.Dimension" editor="org.netbeans.beaninfo.editors.DimensionEditor">
              <Dimension value="[500, 800]"/>
            </Property>
            <Property name="preferredSize" type="java.awt.Dimension" editor="org.netbeans.beaninfo.editors.DimensionEditor">
              <Dimension value="[600, 900]"/>
            </Property>
          </Properties>
          <Constraints>
            <Constraint layoutClass="org.netbeans.modules.form.compat2.layouts.support.JTabbedPaneSupportLayout" value="org.netbeans.modules.form.compat2.layouts.support.JTabbedPaneSupportLayout$JTabbedPaneConstraintsDescription">
              <JTabbedPaneConstraints tabName="Solo Generator">
                <Property name="tabTitle" type="java.lang.String" value="Solo Generator"/>
              </JTabbedPaneConstraints>
            </Constraint>
          </Constraints>

          <Layout class="org.netbeans.modules.form.compat2.layouts.support.JScrollPaneSupportLayout"/>
          <SubComponents>
            <Component class="javax.swing.JTextArea" name="soloGenInstructions">
              <Properties>
                <Property name="columns" type="int" value="20"/>
                <Property name="font" type="java.awt.Font" editor="org.netbeans.beaninfo.editors.FontEditor">
                  <Font name="Lucida Console" size="13" style="0"/>
                </Property>
                <Property name="rows" type="int" value="5"/>
                <Property name="text" type="java.lang.String" value="Help for the Solo Generator &#xa;&#xa;The Solo Generator is a tool that can be used to generate themes &#xa;and to generate solos from one or multiple themes, all based on the&#xa;grammar the user has chosen. In addition to generating themes, you &#xa;can also write your own and save them for later use. It takes in &#xa;four weighted values that determines whether a theme will be used, &#xa;and if it used, if it will be transposed,inverted, or reversed. If &#xa;a theme is not used, the space in the solo will be filled with a &#xa;melody based on the chosen grammar.&#xa;&#xa;&#xa;Highlighting a Cell&#xa;&#xa;There are two ways to highlight a cell: &#xa;&#x9;* Click once on the cell &#xa;Or if you have just entered something into the cell: &#xa;&#x9;* Press &#x201c;Enter&#x201d; &#xa;&#xa;You will know your cell is highlighted if it is blue.&#xa; &#xa;&#xa;Generating a Theme&#xa;&#xa;&#x9;1. Type in an integer for the length of the theme, such as &#x201c;6&#x201d;&#xa;&#x9;   or &#x201c;7&#x201d; into a cell in the &quot;Length&quot; labeled column&#xa;&#xa;&#x9;2. Highlight the cell &#xa;&#xa;&#x9;3. Click the button &#x201c;Generate Theme.&#x201d; &#xa;&#xa;A theme in leadsheet notation should appear in the Theme cell to the right &#xa;of the Length cell you chose. &#xa;&#xa;&#xa;Generating a Solo&#xa;&#xa; &#x9;* Make sure that for every theme in your table, the &#x201c;Use,&#x201d; &#x201c;Transpose,&#x201d; &#xa;&#x9;  &#x201c;Invert,&#x201d; and &#x201c;Reverse&#x201d; cells are all filled in with weighted values &#xa;&#x9;  from 0 to 1, representing how much you want the theme to be used, &#xa;&#x9;  transposed, inverted or reversed. &#xa;&#xa;&#x9;* Make sure after every value you type in, you press &#x201c;Enter&#x201d; &#xa;&#x9;  or click out of the cell to ensure the value has been entered.&#xa;&#xa;&#x9;* Then click the button &#x201c;Generate Solo.&#x201d; &#xa;&#xa;A solo should appear in your open leadsheet and should be played. &#xa;&#xa;&#xa;Naming&#xa; &#xa;To add a theme you have generated or typed in yourself to the dictionary&#xa;of themes in the Themes scroll box to the right of the table, you have &#xa;to name it! The first column of the table is the &#x201c;Name Column&#x201d; as shown &#xa;by the label at the top. &#xa;&#xa;&#x9;1. Double-click the name cell in the row of the theme you want&#xa;&#x9;   to save &#xa;&#xa;&#x9;2. Then type in the name of your choice and then either  &#xa;&#x9;&#x9;*  press &#x201c;Enter&#x201d; or&#xa;&#x9;&#x9;*  click out of the cell&#xa;&#xa;The name should appear in the Themes scroll box at the bottom.  &#xa;&#xa;&#xa;Using Leadsheet Selections as Themes&#xa;&#xa;If there is a string of notes already in the leadsheet that you want to use -  &#xa;&#xa;&#x9;1. Click where the section starts then drag over the section until&#xa;&#x9;   all the notes you want are highlighted &#xa;&#xa;&#x9;2. Go to the Solo Generator window and highlight the theme cell you &#xa;&#x9;   want the theme to appear in. &#xa;&#xa;&#x9;3. Click the button &#x201c;Use Current Selection in Leadsheet Window as Theme.&#x201d;  &#xa;&#xa;&#xa;Editing&#xa;&#xa;If you want, you can make your own edits to current themes in your table! &#xa;Once you press &#x201c;Enter&#x201d; or click out of the cell, the theme length integer in &#xa;the Length cell will change accordingly. &#xa;&#xa;&#xa;Deleting and Resetting&#xa;&#xa;&#x9;* To delete a whole row, highlight any cell in the row you want to delete and press&#xa;&#x9;  the &#x201c;Delete&#x201d; button on your keyboard. &#xa;&#xa;&#x9;* To clear the entire table and restore any rows you deleted, click the &#x201c;Reset&#x201d; button.&#xa;&#xa;&#xa;Playing&#xa;&#xa;&#x9;* To stop playing a solo, click the &#x201c;Stop Playing&#x201d; button. &#xa;&#xa;&#x9;* To play a solo you have stopped click the &#x201c;Play Solo&#x201d; button. &#xa;&#xa;"/>
              </Properties>
              <AuxValues>
                <AuxValue name="JavaCodeGenerator_AddingCodePost" type="java.lang.String" value="lickGenSettings.setEditable(false);"/>
              </AuxValues>
            </Component>
          </SubComponents>
        </Container>
        <Container class="javax.swing.JScrollPane" name="audioInputPane">
          <Properties>
            <Property name="minimumSize" type="java.awt.Dimension" editor="org.netbeans.beaninfo.editors.DimensionEditor">
              <Dimension value="[500, 800]"/>
            </Property>
            <Property name="preferredSize" type="java.awt.Dimension" editor="org.netbeans.beaninfo.editors.DimensionEditor">
              <Dimension value="[600, 900]"/>
            </Property>
          </Properties>
          <Constraints>
            <Constraint layoutClass="org.netbeans.modules.form.compat2.layouts.support.JTabbedPaneSupportLayout" value="org.netbeans.modules.form.compat2.layouts.support.JTabbedPaneSupportLayout$JTabbedPaneConstraintsDescription">
              <JTabbedPaneConstraints tabName="Audio Input">
                <Property name="tabTitle" type="java.lang.String" value="Audio Input"/>
              </JTabbedPaneConstraints>
            </Constraint>
          </Constraints>

          <Layout class="org.netbeans.modules.form.compat2.layouts.support.JScrollPaneSupportLayout"/>
          <SubComponents>
            <Component class="javax.swing.JTextArea" name="audioInputPaneText">
              <Properties>
                <Property name="columns" type="int" value="20"/>
                <Property name="font" type="java.awt.Font" editor="org.netbeans.beaninfo.editors.FontEditor">
                  <Font name="Lucida Console" size="13" style="0"/>
                </Property>
                <Property name="rows" type="int" value="5"/>
                <Property name="text" type="java.lang.String" value="Help for Audio Input&#xa;&#xa;WINDOWS&#xa;1. Download SuperCollider. Here is the link:&#xa;http://supercollider.sourceforge.net/downloads/&#xa;&#xa;2. Download the plugins for SuperCollider. Here is the link:&#xa;http://sourceforge.net/projects/sc3-plugins/files/&#xa;&#xa;Save the download. The downloaded folder will be called &apos;SC3plugins.&apos;&#xa;Open a Windows Explorer window. Navigate to Users-&gt;YOUR_USER_NAME_HERE&#xa;-&gt;AppData-&gt;Local-&gt;SuperCollider&#xa;&#xa;(&#xa;If you have trouble finding AppData, it is probably a hidden folder. &#xa;You can visit:&#xa;http://www.bleepingcomputer.com/tutorials/how-to-see-hidden-files-in-windows/&#xa;According to your version of Windows, change your settings so you can &#xa;see your hidden folders. Alternatively, click on the address bar at the top of your explorer and type:&#xa;C:\u005cUsers\u005cYOUR_USER_NAME_HERE\u005cAppData\u005cLocal\u005cSuperCollider&#xa;)&#xa;&#xa;- Check to see if there is a folder called &apos;Extensions&apos; inside SuperCollider. &#xa;If not, create a new folder called &apos;Extensions.&apos; Open the folder.&#xa;&#xa;-Drag the downloaded SC3plugins folder to this window. Double-click on &#xa;SC3plugins. If you would like to save some space, for Impro-Visor purposes &#xa;you only need the folder called &apos;PitchDetection,&apos; and the file called &#xa;PitchDetection.scx, so you can delete everything else, if you wish. You may &#xa;exit Explorer window. Your plugins are now ready.&#xa;&#xa;3. In the same folder containing these instructions, there is a file called &#xa;&apos;SCPitchDetection.sc.&apos; Open SuperCollider if you have not already. Inside &#xa;SuperCollider, open SCPitchDetection.sc. When ready to run it, highlight &#xa;everything and press enter.&#xa;&#xa;4. Download &apos;LoopBe1&apos; (NOT LoopBe30) here: &#xa;http://www.nerds.de/en/download.html &#xa;(minimal effort - don&apos;t worry) and make sure it&apos;s running and not on mute.&#xa;&#xa;***Post-Install Use***&#xa;&#xa;5. Plug in your microphone and make sure it is set as your sound-in source.&#xa;Make sure the sound sensitivity is at a satisfactory level.&#xa;&#xa;6. Restart Impro-Visor if it is already running. If not, run Impro-Visor.&#xa;In Impro-Visor, go to MIDI setup and select &apos;LoopBe Internal MIDI&apos;, and then &#xa;go to the Audio Input tab in MIDI setup and make sure &apos;Use SuperCollider&apos; &#xa;is checked.&#xa;&#xa;7. Open the &apos;SCPitchDetection.sc&apos; file in SuperCollider if it is not already &#xa;open. Highlight everything (as described above) and press control+enter. &#xa;Another window will appear to let you select note ranges (in MIDI notes) and &#xa;attack delay . SuperCollider is now ready (may take a few seconds), so you may &#xa;start audio capture. You are now ready to start recording (press red circle &#xa;button in Impro-Visor).&#xa;&#xa;&#xa;&#xa;&#xa;&#xa;OSX&#xa;1. Download SuperCollider. Place it into your Applications folder as normal.&#xa;Here is the link:&#xa;http://supercollider.sourceforge.net/downloads/&#xa;&#xa;1.5. Run SuperCollider to make sure you have permissions to open it. If you&#xa;have trouble, hold down the control key and click the icon. Click &apos;Open&apos; &#xa;from the resulting menu.&#xa; &#xa;2. Download the plugins for SuperCollider. Here is the link:&#xa;http://sourceforge.net/projects/sc3-plugins/files/&#xa;&#xa;The downloaded folder will be called &apos;SC3plugins.&apos;&#xa;- First, navigate to /Library/Application Support/SuperCollider/ and create &#xa;a folder called Extensions if it doesn&apos;t already exist. If you are having &#xa;trouble finding the folder, do the following:&#xa;&#xa;&#x9;From the Finder bar, click Go-&gt;Go to Folder&#xa;&#x9;Type ~/Library/&#xa;&#x9;Click Application Support, and then click SuperCollider&#xa;&#xa;- Check to see if there is a folder called &apos;Extensions&apos; inside SuperCollider. &#xa;If not, create a new folder called &apos;Extensions.&apos; Open the folder.&#xa;&#xa;-Drag the downloaded SC3plugins folder to this window. Double-click on &#xa;SC3plugins. If you would like to save some space, for Impro-Visor purposes &#xa;you only need the folder called &apos;PitchDetection,&apos; so you can delete the other &#xa;folders, if you wish. You may exit the Finder window. Your plugins are now &#xa;ready.&#xa;&#xa;3. Inside your Impro-Visor folder, inside the folder &apos;sc&apos; is a file called &#xa;&apos;SCPitchDetection.sc.&apos; Open SuperCollider if you have not already. Inside &#xa;SuperCollider, open SCPitchDetection.sc. When ready to run it, highlight &#xa;everything and press enter.&#xa;&#xa;4.Navigate through Go-&gt;Utilities-&gt;Audio MIDI Setup -&gt;Window-&gt;Show MIDI &#xa;Window-&gt;IAC Driver and make sure the box next to &apos;Device Is Online&apos; is checked. &#xa;Make sure that &apos;IAC Bus 1&apos; is selected under &apos;Ports&apos;. If it only says &apos;Bus 1,&apos; &#xa;click the minus sign once and the plus sign once. It should now say &apos;IAC Bus 1.&apos;&#xa;&#xa;***Post-Install Use***&#xa;&#xa;5. Plug in your microphone and make sure it is set as your sound-in source.&#xa;Make sure the sound sensitivity is at a satisfactory level.&#xa; &#xa;6. Restart Impro-Visor if it is already running. If not, run Impro-Visor.&#xa;In Impro-Visor, go to MIDI setup and select &apos;IAC Bus 1&apos;, and then go to the &#xa;Audio Input tab in MIDI setup and make sure &apos;Use SuperCollider&apos; is checked.&#xa; &#xa;7. Open the &apos;SCPitchDetection.sc&apos; file in SuperCollider if it is not already &#xa;open. Highlight everything (as described above) and press command+enter. &#xa;Another window will appear to let you select note ranges (in MIDI notes) and &#xa;attack delay. SuperCollider is now ready (may take a few seconds), so you may &#xa;start audio capture. You are now ready to start recording (press red circle &#xa;button in Impro-Visor).&#xa;&#xa;&#xa;LINUX&#xa;Currently under construction. You are able to input audio, but you can&apos;t hear&#xa;the background music or the notes you&apos;re inputting. Instructions for what&#xa;currently works can be found inside your Impro-Visor folder, inside the folder&#xa;&apos;sc.&apos;" containsInvalidXMLChars="true"/>
              </Properties>
              <AuxValues>
                <AuxValue name="JavaCodeGenerator_AddingCodePost" type="java.lang.String" value="lickGenSettings.setEditable(false);"/>
              </AuxValues>
            </Component>
          </SubComponents>
        </Container>
        <Container class="javax.swing.JScrollPane" name="chordListingPane">
          <Properties>
            <Property name="toolTipText" type="java.lang.String" value="Listing of Available Chords"/>
            <Property name="minimumSize" type="java.awt.Dimension" editor="org.netbeans.beaninfo.editors.DimensionEditor">
              <Dimension value="[500, 800]"/>
            </Property>
            <Property name="preferredSize" type="java.awt.Dimension" editor="org.netbeans.beaninfo.editors.DimensionEditor">
              <Dimension value="[600, 900]"/>
            </Property>
          </Properties>
          <Constraints>
            <Constraint layoutClass="org.netbeans.modules.form.compat2.layouts.support.JTabbedPaneSupportLayout" value="org.netbeans.modules.form.compat2.layouts.support.JTabbedPaneSupportLayout$JTabbedPaneConstraintsDescription">
              <JTabbedPaneConstraints tabName="Chords">
                <Property name="tabTitle" type="java.lang.String" value="Chords"/>
              </JTabbedPaneConstraints>
            </Constraint>
          </Constraints>

          <Layout class="org.netbeans.modules.form.compat2.layouts.support.JScrollPaneSupportLayout"/>
          <SubComponents>
            <Component class="javax.swing.JTextArea" name="chordList">
              <Properties>
                <Property name="editable" type="boolean" value="false"/>
                <Property name="columns" type="int" value="20"/>
                <Property name="font" type="java.awt.Font" editor="org.netbeans.beaninfo.editors.FontEditor">
                  <Font name="Lucida Console" size="13" style="0"/>
                </Property>
                <Property name="rows" type="int" value="5"/>
                <Property name="text" type="java.lang.String" value="These are the chord definitions supplied in the current release. &#xa;If you add your own chord definitions, they will not appear here.&#xa;&#xa;Note: Chord notation is case-sensitive.&#xa;&#xa;We use root C, but any root may be used. The acceptable roots are:&#xa;A, B, C, D, E, F, G, each of which may be followed by # (sharp) or b (flat).&#xa;&#xa;Slash chords (with bass other than the root) are allowed, e.g. Cm7/D means&#xa;Cm7 over a D bass. (The bass note may or may not be in the chord already.)&#xa;&#xa;Polychords use back-slash, e.g. Ab\u005cC7 means an Ab triad over a C7 chord.&#xa;&#xa;Major Chords&#xa;&#xa;C.............. same as CM&#xa;CM............. C major (c e g)&#xa;C2............. same as CMadd9&#xa;C5............. C five (c g)&#xa;C6............. same as CM6&#xa;C69............ same as CM69&#xa;C6#11.......... same as CM6#11&#xa;C69#11......... same as CM69#11&#xa;C6b5........... same as CM6#11&#xa;CM13........... C major thirteen (c e g b d a)&#xa;CM13#11........ C major thirteen sharp eleven (c e g b d f# a)&#xa;Cmaj13......... same as CM13&#xa;CMaj13......... same as CM13&#xa;Cmaj13#11...... same as CM13#11&#xa;CMaj13#11...... same as CM13#11&#xa;CM6............ C major six (c e g a)&#xa;CM6#11......... C major six sharp eleven (c e g a f#)&#xa;CM6b5.......... same as CM6#11&#xa;CM69#11........ C major six nine sharp eleven (c e g a d f#)&#xa;CM69........... C major six nine (c e g a d)&#xa;CM7#11......... C major seven sharp eleven (c e g b f#)&#xa;CM7............ C major seven (c e g b)&#xa;Cmaj7.......... same as CM7&#xa;CMaj7.......... same as CM7&#xa;Cmaj7#11....... same as CM7#11&#xa;CMaj7#11....... same as CM7#11&#xa;CM7add13....... C major seven add 13 (c e g a b d)&#xa;CM7b5.......... C major seven flat five (c e gb b)&#xa;CM7b6.......... C major seven flat six (c e g ab b)&#xa;CM7b9.......... C major seven flat nine (c e g b db)&#xa;CM9............ C major nine (c e g b d)&#xa;CM9#11......... C major nine sharp eleven (c e g b d f#)&#xa;Cmaj9.......... same as CM9&#xa;CMaj9.......... same as CM9&#xa;Cmaj9#11....... same as CM9#11&#xa;CMaj9#11....... same as CM9#11&#xa;CM9b5.......... C major nine flat five (c e gb b d)&#xa;CMadd9......... C major add nine (c e g d)&#xa;CMb5........... C major flat five (c e gb)&#xa;CMb6........... C major flat six (c e ab)&#xa;Cadd2.......... same as CMadd9&#xa;Cadd9.......... same as CMadd9&#xa;Cadd9no3....... same as CMsus2&#xa;&#xa;Minor Chords&#xa;&#xa;Cm#5........... C minor sharp five (c eb g#)&#xa;Cm+............ same as Cm#5&#xa;Cm............. C minor (c eb g)&#xa;Cm11#5......... C minor eleven sharp five (c eb ab bb d f)&#xa;Cm11........... C minor eleven (c eb g bb d f)&#xa;Cm11b5......... C minor eleven flat five (c eb bb gb d f)&#xa;Cm13........... C minor thirteen (c eb g bb d f a)&#xa;Cm6............ C minor six (c eb g a)&#xa;Cm69........... C minor six nine (c eb g a d)&#xa;Cm7#5.......... C minor seven sharp five (c eb ab bb)&#xa;Cm7............ C minor seven (c eb g bb)&#xa;Cm7b5.......... C minor seven flat five (c eb gb bb)&#xa;Ch............. same as Cm7b5 (h for &quot;half-diminished&quot;)&#xa;Cm9#5.......... C minor nine sharp five (c eb ab bb d)&#xa;Cm9............ C minor nine (c eb g bb d)&#xa;Cm9b5.......... C minor nine flat five (c eb bb gb d)&#xa;CmM7........... C minor major seven (c eb g b)&#xa;CmM7b6......... C minor major seven flat six (c eb g ab b)&#xa;CmM9........... C minor major nine (c eb g b d)&#xa;Cmadd9......... C minor add nine (c eb g d)&#xa;Cmb6........... C minor flat six (c eb ab)&#xa;Cmb6M7......... C minor flat six major 7 (c eb ab b)&#xa;Cmb6b9......... C minor flat six flat nine (c eb ab db)&#xa;&#xa;Diminished Chords&#xa;&#xa;Cdim........... C diminished triad (c eb gb)&#xa;Co............. same as Cdim&#xa;Cdim7.......... C diminished seventh (c eb gb a)&#xa;Co7............ same as Cdim7&#xa;CoM7........... C diminished major seventh (c eb gb b)&#xa;Co7M7.......... C diminished seventh major seventh (c eb gb a b)&#xa;&#xa;Augmented Chords&#xa;&#xa;CM#5........... C major sharp five (c e g#)&#xa;C+............. same as CM#5&#xa;Caug........... same as CM#5&#xa;C+7............ same as C7#5&#xa;CM#5add9....... C major sharp five add 9 (c e g# d)&#xa;CM7#5.......... C major seven sharp five (c e g# b)&#xa;CM7+........... same as CM7#5&#xa;CM9#5.......... C major nine sharp five (c e g# b d)&#xa;C+add9......... same as CM#5add9&#xa;&#xa;Dominant Chords&#xa;&#xa;C7............. C seven (c e g bb)&#xa;C7#5........... C seven sharp five (c e g# bb)&#xa;C7+............ same as C7#5&#xa;Caug7.......... same as C7#5&#xa;C7aug.......... same as C7#5&#xa;C7#5#9......... C seven sharp five sharp nine (c e g# bb d#)&#xa;C7alt.......... same as C7#5#9&#xa;C7b13.......... C seven flat thirteen (c e g bb ab)&#xa;C7b5#9......... same as C7#9#11&#xa;C7b5........... C seven flat five (c e gb bb)&#xa;C7b5b13........ same as C7#11b13&#xa;C7b5b9......... same as C7b9#11&#xa;C7b5b9b13...... same as C7b9#11b13&#xa;C7b6........... C seven flat six (c e g ab bb)&#xa;C7b9#11........ C seven flat nine sharp eleven (c e g bb db f#)&#xa;C7b9#11b13..... C seven flat nine sharp eleven flat thirteen (c e g bb db f# ab)&#xa;C7b9........... C seven flat nine (c e g bb db)&#xa;C7b9b13#11..... C seven flat nine flat thirteen sharp eleven (c e g bb db f# ab)&#xa;C7b9b13........ C seven flat nine flat thirteen (c e g bb db ab)&#xa;C7no5.......... C seven no five (c e bb)&#xa;C7#11.......... C seven sharp eleven (c e g bb f#)&#xa;C7#11b13....... C seven sharp eleven flat thirteen (c e g bb f# ab)&#xa;C7#5b9#11...... C seven sharp five flat nine sharp 11 (c e g# bb db f#)&#xa;C7#5b9......... C seven sharp five flat nine (c e g# bb db)&#xa;C7#9#11........ C seven sharp nine sharp eleven (c e g bb d# f#)&#xa;C7#9#11b13..... C seven sharp nine sharp eleven flat thirteen (c e g bb d# f# ab)&#xa;C7#9........... C seven sharp nine (c e g bb d#)&#xa;C7#9b13........ C seven sharp nine flat thirteen (c e g bb d# ab)&#xa;&#xa;C9............. C nine (c e g bb d)&#xa;C9#5........... C nine sharp five (c e g# bb d)&#xa;C9+............ same as C9#5&#xa;C9#11.......... C nine sharp eleven (c e g bb d f#)&#xa;C9#11b13....... C nine sharp eleven flat thirteen (c e g bb d f# ab)&#xa;C9#5#11........ C nine sharp five sharp eleven (c e g# bb d f#)&#xa;C9b13.......... C nine flat thirteen (c e g bb d ab)&#xa;C9b5........... C nine flat five (c e gb bb d)&#xa;C9b5b13........ same as C9#11b13&#xa;C9no5.......... C nine no five (c e bb d)&#xa;&#xa;C13#11......... C thirteen sharp eleven (c e g bb d f# a)&#xa;C13#9#11....... C thirteen sharp nine sharp eleven (c e g bb d# f# a)&#xa;C13#9.......... C thirteen sharp nine (c e g bb d# a)&#xa;C13............ C thirteen (c e g bb d a)&#xa;C13b5.......... C thirteen flat five (c e gb a bb)&#xa;C13b9#11....... C thirteen flat nine sharp eleven (c e g bb db f# a)&#xa;C13b9.......... C thirteen flat nine (c e g bb db a)&#xa;&#xa;Suspensions&#xa;&#xa;CMsus2......... C major sus two (c d g)&#xa;CMsus4......... C major sus four (c f g)&#xa;Csus2.......... same as CMsus2&#xa;Csus24......... C sus two four (c d f g)&#xa;Csus4.......... same as CMsus4&#xa;Csus4add9...... same as Csus24&#xa;Csusb9......... C sus flat nine (c db f g)&#xa;C4............. C four (c f bb eb)&#xa;Cquartal....... same as C4&#xa;C7b9b13sus4.... same as C7sus4b9b13&#xa;C7b9sus........ same as C7susb9&#xa;C7b9sus4....... same as C7sus4b9&#xa;C7b9sus4....... same as C7susb9&#xa;C7sus.......... same as C7sus4&#xa;C7sus4......... C seven sus four (c f g bb)&#xa;C7sus4b9....... C seven sus four flat nine (c f g bb db)&#xa;C7sus4b9b13.... C seven sus four flat nine flat thirteen (c f g bb db ab)&#xa;C7susb9........ C seven sus flat nine (c db f g bb)&#xa;C9sus4......... C nine sus four (c f g bb d)&#xa;C9sus.......... same as C9sus4&#xa;C11............ C eleven (c e g bb d f)&#xa;C13sus......... same as C13sus4&#xa;C13sus4........ C thirteen sus four (c f g bb d a)&#xa;&#xa;Miscellaneous&#xa;&#xa;CBlues......... C Blues (c eb f gb g bb) (Use upper case to avoid confusion with Cb = C flat)&#xa;CBass.......... C Bass (c) (Use upper case to avoid confusion with Cb = C flat)&#xa;" containsInvalidXMLChars="true"/>
              </Properties>
              <AuxValues>
                <AuxValue name="JavaCodeGenerator_AddingCodePost" type="java.lang.String" value="chordList.setEditable(false);"/>
              </AuxValues>
            </Component>
          </SubComponents>
        </Container>
      </SubComponents>
    </Container>
  </SubComponents>
</Form>
