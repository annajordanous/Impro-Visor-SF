package prolog;

import jp.ac.kobe_u.cs.prolog.lang.*;
import jp.ac.kobe_u.cs.prolog.builtin.*;
/*
 This file is generated by Prolog Cafe.
 PLEASE DO NOT EDIT!
*/
/**
 <code>consonance/3</code> defined in attributes.pro<br>
 @author Mutsunori Banbara (banbara@kobe-u.ac.jp)
 @author Naoyuki Tamura (tamura@kobe-u.ac.jp)
 @version 1.0
*/
public class PRED_consonance_3 extends Predicate {
    static IntegerTerm si1 = new IntegerTerm(0);

    public Term arg1, arg2, arg3;

    public PRED_consonance_3(Term a1, Term a2, Term a3, Predicate cont) {
        arg1 = a1;
        arg2 = a2;
        arg3 = a3;
        this.cont = cont;
    }

    public PRED_consonance_3(){}

    public void setArgument(Term[] args, Predicate cont) {
        arg1 = args[0];
        arg2 = args[1];
        arg3 = args[2];
        this.cont = cont;
    }

    public int arity() { return 3; }

    public String toString() {
        return "consonance(" + arg1 + "," + arg2 + "," + arg3 + ")";
    }

    public Predicate exec(Prolog engine) {
    // consonance(A,B,C):-consonance_sum(B,0,D),C is D/A
        engine.setB0();
        Term a1, a2, a3, a4;
        Predicate p1;
        a1 = arg1;
        a2 = arg2;
        a3 = arg3;
    // consonance(A,B,C):-[consonance_sum(B,0,D),'$float_quotient'(D,A,C)]
        a4 = new VariableTerm(engine);
        p1 = new PRED_$float_quotient_3(a4, a1, a3, cont);
        return new PRED_consonance_sum_3(a2, si1, a4, p1);
    }
}
