package prolog;

import jp.ac.kobe_u.cs.prolog.lang.*;
import jp.ac.kobe_u.cs.prolog.builtin.*;
/*
 This file is generated by Prolog Cafe.
 PLEASE DO NOT EDIT!
*/
/**
 <code>terminal_to_functor/2</code> defined in rule_initialize.pro<br>
 @author Mutsunori Banbara (banbara@kobe-u.ac.jp)
 @author Naoyuki Tamura (tamura@kobe-u.ac.jp)
 @version 1.0
*/
public class PRED_terminal_to_functor_2 extends Predicate {
    static SymbolTerm s1 = SymbolTerm.makeSymbol("t", 2);

    public Term arg1, arg2;

    public PRED_terminal_to_functor_2(Term a1, Term a2, Predicate cont) {
        arg1 = a1;
        arg2 = a2;
        this.cont = cont;
    }

    public PRED_terminal_to_functor_2(){}

    public void setArgument(Term[] args, Predicate cont) {
        arg1 = args[0];
        arg2 = args[1];
        this.cont = cont;
    }

    public int arity() { return 2; }

    public String toString() {
        return "terminal_to_functor(" + arg1 + "," + arg2 + ")";
    }

    public Predicate exec(Prolog engine) {
    // terminal_to_functor(A,B):-note(A),first_atom(A,C),note_duration(A,D),rest_atom(A,E),assert_notation(D,E),B=t(C,D)
        engine.setB0();
        Term a1, a2, a3, a4, a5, a6;
        Predicate p1, p2, p3, p4, p5;
        a1 = arg1;
        a2 = arg2;
    // terminal_to_functor(A,B):-[note(A),first_atom(A,C),note_duration(A,D),rest_atom(A,E),assert_notation(D,E),'$unify'(B,t(C,D))]
        a3 = new VariableTerm(engine);
        a4 = new VariableTerm(engine);
        a5 = new VariableTerm(engine);
        Term[] y1 = {a3, a4};
        a6 = new StructureTerm(s1, y1);
        p1 = new PRED_$unify_2(a2, a6, cont);
        p2 = new PRED_assert_notation_2(a4, a5, p1);
        p3 = new PRED_rest_atom_2(a1, a5, p2);
        p4 = new PRED_note_duration_2(a1, a4, p3);
        p5 = new PRED_first_atom_2(a1, a3, p4);
        return new PRED_note_1(a1, p5);
    }
}
