import jp.ac.kobe_u.cs.prolog.lang.*;
import jp.ac.kobe_u.cs.prolog.builtin.*;
/*
 This file is generated by Prolog Cafe.
 PLEASE DO NOT EDIT!
*/
/**
 <code>test_syncopation_measure_lh/0</code> defined in longuet_higgins.pro<br>
 @author Mutsunori Banbara (banbara@kobe-u.ac.jp)
 @author Naoyuki Tamura (tamura@kobe-u.ac.jp)
 @version 1.0
*/
public class PRED_test_syncopation_measure_lh_0 extends Predicate {
    static IntegerTerm si1 = new IntegerTerm(480);
    static IntegerTerm si2 = new IntegerTerm(0);
    static IntegerTerm si3 = new IntegerTerm(120);
    static SymbolTerm s4 = SymbolTerm.makeSymbol("[]");
    static ListTerm s5 = new ListTerm(si3, s4);
    static ListTerm s6 = new ListTerm(si2, s5);
    static IntegerTerm si7 = new IntegerTerm(1);
    static IntegerTerm si8 = new IntegerTerm(240);
    static ListTerm s9 = new ListTerm(si8, s4);
    static ListTerm s10 = new ListTerm(si3, s9);
    static ListTerm s11 = new ListTerm(si2, s10);
    static IntegerTerm si12 = new IntegerTerm(360);
    static ListTerm s13 = new ListTerm(si12, s4);
    static ListTerm s14 = new ListTerm(si3, s13);
    static ListTerm s15 = new ListTerm(si8, s13);
    static IntegerTerm si16 = new IntegerTerm(60);
    static IntegerTerm si17 = new IntegerTerm(180);
    static IntegerTerm si18 = new IntegerTerm(300);
    static IntegerTerm si19 = new IntegerTerm(420);
    static ListTerm s20 = new ListTerm(si19, s4);
    static ListTerm s21 = new ListTerm(si18, s20);
    static ListTerm s22 = new ListTerm(si8, s21);
    static ListTerm s23 = new ListTerm(si17, s22);
    static ListTerm s24 = new ListTerm(si16, s23);
    static ListTerm s25 = new ListTerm(si2, s24);
    static IntegerTerm si26 = new IntegerTerm(2);
    static ListTerm s27 = new ListTerm(si2, s14);
    static ListTerm s28 = new ListTerm(s27, s4);
    static ListTerm s29 = new ListTerm(s13, s4);

    public PRED_test_syncopation_measure_lh_0(Predicate cont) {
        this.cont = cont;
    }

    public PRED_test_syncopation_measure_lh_0(){}

    public void setArgument(Term[] args, Predicate cont) {
        this.cont = cont;
    }

    public int arity() { return 0; }

    public String toString() {
        return "test_syncopation_measure_lh";
    }

    public Predicate exec(Prolog engine) {
    // test_syncopation_measure_lh:-syncopation_measure_lh(480,[0,120],[],120,1),syncopation_measure_lh(480,[0,120,240],[],120,0),syncopation_measure_lh(480,[120,360],[],120,1),syncopation_measure_lh(480,[240,360],[],120,0),syncopation_measure_lh(480,[0,60,180,240,300,420],[],60,2),syncopation_measure_lh(480,[0,120],[[0,120,360]],120,2),syncopation_measure_lh(480,[0,120,360],[[360]],120,1)
        engine.setB0();
        Predicate p1, p2, p3, p4, p5, p6;
    // test_syncopation_measure_lh:-[syncopation_measure_lh(480,[0,120],[],120,1),syncopation_measure_lh(480,[0,120,240],[],120,0),syncopation_measure_lh(480,[120,360],[],120,1),syncopation_measure_lh(480,[240,360],[],120,0),syncopation_measure_lh(480,[0,60,180,240,300,420],[],60,2),syncopation_measure_lh(480,[0,120],[[0,120,360]],120,2),syncopation_measure_lh(480,[0,120,360],[[360]],120,1)]
        p1 = new PRED_syncopation_measure_lh_5(si1, s27, s29, si3, si7, cont);
        p2 = new PRED_syncopation_measure_lh_5(si1, s6, s28, si3, si26, p1);
        p3 = new PRED_syncopation_measure_lh_5(si1, s25, s4, si16, si26, p2);
        p4 = new PRED_syncopation_measure_lh_5(si1, s15, s4, si3, si2, p3);
        p5 = new PRED_syncopation_measure_lh_5(si1, s14, s4, si3, si7, p4);
        p6 = new PRED_syncopation_measure_lh_5(si1, s11, s4, si3, si2, p5);
        return new PRED_syncopation_measure_lh_5(si1, s6, s4, si3, si7, p6);
    }
}
