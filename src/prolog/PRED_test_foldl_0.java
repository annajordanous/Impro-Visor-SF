package prolog;

import jp.ac.kobe_u.cs.prolog.lang.*;
import jp.ac.kobe_u.cs.prolog.builtin.*;
/*
 This file is generated by Prolog Cafe.
 PLEASE DO NOT EDIT!
*/
/**
 <code>test_foldl/0</code> defined in functional.pro<br>
 @author Mutsunori Banbara (banbara@kobe-u.ac.jp)
 @author Naoyuki Tamura (tamura@kobe-u.ac.jp)
 @version 1.0
*/
public class PRED_test_foldl_0 extends Predicate {
    static SymbolTerm s1 = SymbolTerm.makeSymbol("con");
    static SymbolTerm s2 = SymbolTerm.makeSymbol("cat");
    static SymbolTerm s3 = SymbolTerm.makeSymbol("[]");
    static ListTerm s4 = new ListTerm(s2, s3);
    static ListTerm s5 = new ListTerm(s1, s4);
    static SymbolTerm s6 = SymbolTerm.makeSymbol("fn", 2);
    static SymbolTerm s7 = SymbolTerm.makeSymbol("atom_concat", 3);
    static SymbolTerm s8 = SymbolTerm.makeSymbol("");
    static SymbolTerm s9 = SymbolTerm.makeSymbol("concat");
    static SymbolTerm s10 = SymbolTerm.makeSymbol("atom_concat");

    public PRED_test_foldl_0(Predicate cont) {
        this.cont = cont;
    }

    public PRED_test_foldl_0(){}

    public void setArgument(Term[] args, Predicate cont) {
        this.cont = cont;
    }

    public int arity() { return 0; }

    public String toString() {
        return "test_foldl";
    }

    public Predicate exec(Prolog engine) {
    // test_foldl:-foldl_fn([con,cat],fn([A,B,C],atom_concat(A,B,C)),'',concat),foldl1([con,cat],atom_concat,concat),foldl([con,cat],atom_concat,'',concat)
        engine.setB0();
        Term a1, a2, a3, a4, a5, a6, a7, a8;
        Predicate p1, p2;
    // test_foldl:-[foldl_fn([con,cat],fn([A,B,C],atom_concat(A,B,C)),'',concat),foldl1([con,cat],atom_concat,concat),foldl([con,cat],atom_concat,'',concat)]
        a1 = new VariableTerm(engine);
        a2 = new VariableTerm(engine);
        a3 = new VariableTerm(engine);
        a4 = new ListTerm(a3, s3);
        a5 = new ListTerm(a2, a4);
        a6 = new ListTerm(a1, a5);
        Term[] y1 = {a1, a2, a3};
        a7 = new StructureTerm(s7, y1);
        Term[] y2 = {a6, a7};
        a8 = new StructureTerm(s6, y2);
        p1 = new PRED_foldl_4(s5, s10, s8, s9, cont);
        p2 = new PRED_foldl1_3(s5, s10, s9, p1);
        return new PRED_foldl_fn_4(s5, a8, s8, s9, p2);
    }
}
