import jp.ac.kobe_u.cs.prolog.lang.*;
import jp.ac.kobe_u.cs.prolog.builtin.*;
/*
 This file is generated by Prolog Cafe.
 PLEASE DO NOT EDIT!
*/
/**
 <code>test_syncopation/0</code> defined in syncopation.pro<br>
 @author Mutsunori Banbara (banbara@kobe-u.ac.jp)
 @author Naoyuki Tamura (tamura@kobe-u.ac.jp)
 @version 1.0
*/
public class PRED_test_syncopation_0 extends Predicate {
    static IntegerTerm si1 = new IntegerTerm(0);
    static IntegerTerm si2 = new IntegerTerm(120);
    static IntegerTerm si3 = new IntegerTerm(240);
    static SymbolTerm s4 = SymbolTerm.makeSymbol("[]");
    static ListTerm s5 = new ListTerm(si2, s4);
    static ListTerm s6 = new ListTerm(si3, s5);
    static ListTerm s7 = new ListTerm(si2, s6);
    static ListTerm s8 = new ListTerm(si1, s7);
    static SymbolTerm s9 = SymbolTerm.makeSymbol("1 : ");
    static SymbolTerm s10 = SymbolTerm.makeSymbol("2 : ");
    static SymbolTerm s11 = SymbolTerm.makeSymbol("3 : ");
    static IntegerTerm si12 = new IntegerTerm(60);
    static IntegerTerm si13 = new IntegerTerm(180);
    static ListTerm s14 = new ListTerm(si13, s4);
    static ListTerm s15 = new ListTerm(si12, s14);
    static ListTerm s16 = new ListTerm(si13, s15);
    static ListTerm s17 = new ListTerm(si12, s16);
    static ListTerm s18 = new ListTerm(si1, s17);
    static SymbolTerm s19 = SymbolTerm.makeSymbol("4 : ");
    static ListTerm s20 = new ListTerm(si12, s4);
    static ListTerm s21 = new ListTerm(si12, s20);
    static ListTerm s22 = new ListTerm(si13, s21);
    static ListTerm s23 = new ListTerm(si12, s22);
    static ListTerm s24 = new ListTerm(si2, s23);
    static SymbolTerm s25 = SymbolTerm.makeSymbol("5 : ");
    static ListTerm s26 = new ListTerm(si12, s5);
    static ListTerm s27 = new ListTerm(si12, s26);
    static ListTerm s28 = new ListTerm(si2, s27);
    static ListTerm s29 = new ListTerm(si12, s28);
    static ListTerm s30 = new ListTerm(si12, s29);
    static ListTerm s31 = new ListTerm(si1, s30);
    static SymbolTerm s32 = SymbolTerm.makeSymbol("6 : ");
    static ListTerm s33 = new ListTerm(si2, s21);
    static ListTerm s34 = new ListTerm(si12, s33);
    static ListTerm s35 = new ListTerm(si12, s34);
    static ListTerm s36 = new ListTerm(si2, s35);
    static ListTerm s37 = new ListTerm(si1, s36);
    static SymbolTerm s38 = SymbolTerm.makeSymbol("7 : ");
    static IntegerTerm si39 = new IntegerTerm(30);
    static IntegerTerm si40 = new IntegerTerm(150);
    static ListTerm s41 = new ListTerm(si40, s4);
    static ListTerm s42 = new ListTerm(si39, s41);
    static ListTerm s43 = new ListTerm(si39, s42);
    static ListTerm s44 = new ListTerm(si39, s43);
    static ListTerm s45 = new ListTerm(si40, s44);
    static ListTerm s46 = new ListTerm(si39, s45);
    static ListTerm s47 = new ListTerm(si39, s46);
    static ListTerm s48 = new ListTerm(si39, s47);
    static ListTerm s49 = new ListTerm(si1, s48);
    static SymbolTerm s50 = SymbolTerm.makeSymbol("8 : ");
    static ListTerm s51 = new ListTerm(si39, s4);
    static ListTerm s52 = new ListTerm(si39, s51);
    static ListTerm s53 = new ListTerm(si39, s52);
    static ListTerm s54 = new ListTerm(si39, s53);
    static ListTerm s55 = new ListTerm(si40, s54);
    static ListTerm s56 = new ListTerm(si39, s55);
    static ListTerm s57 = new ListTerm(si39, s56);
    static ListTerm s58 = new ListTerm(si39, s57);
    static ListTerm s59 = new ListTerm(si2, s58);
    static SymbolTerm s60 = SymbolTerm.makeSymbol("9 : ");
    static IntegerTerm si61 = new IntegerTerm(360);
    static ListTerm s62 = new ListTerm(si61, s54);
    static SymbolTerm s63 = SymbolTerm.makeSymbol("10: ");
    static ListTerm s64 = new ListTerm(si2, s54);
    static ListTerm s65 = new ListTerm(si2, s64);
    static ListTerm s66 = new ListTerm(si2, s65);
    static ListTerm s67 = new ListTerm(si1, s66);
    static SymbolTerm s68 = SymbolTerm.makeSymbol("11: ");
    static ListTerm s69 = new ListTerm(si3, s54);
    static ListTerm s70 = new ListTerm(si2, s69);
    static ListTerm s71 = new ListTerm(si1, s70);
    static SymbolTerm s72 = SymbolTerm.makeSymbol("12: ");
    static ListTerm s73 = new ListTerm(si1, s62);
    static SymbolTerm s74 = SymbolTerm.makeSymbol("13: ");
    static IntegerTerm si75 = new IntegerTerm(420);
    static ListTerm s76 = new ListTerm(si75, s4);
    static ListTerm s77 = new ListTerm(si12, s76);
    static SymbolTerm s78 = SymbolTerm.makeSymbol("14: ");
    static IntegerTerm si79 = new IntegerTerm(300);
    static ListTerm s80 = new ListTerm(si79, s4);
    static ListTerm s81 = new ListTerm(si2, s80);
    static ListTerm s82 = new ListTerm(si12, s81);
    static SymbolTerm s83 = SymbolTerm.makeSymbol("15: ");
    static ListTerm s84 = new ListTerm(si2, s14);
    static ListTerm s85 = new ListTerm(si2, s84);
    static ListTerm s86 = new ListTerm(si12, s85);
    static SymbolTerm s87 = SymbolTerm.makeSymbol("16: ");
    static ListTerm s88 = new ListTerm(si2, s20);
    static ListTerm s89 = new ListTerm(si2, s88);
    static ListTerm s90 = new ListTerm(si2, s89);
    static ListTerm s91 = new ListTerm(si12, s90);
    static SymbolTerm s92 = SymbolTerm.makeSymbol("17: ");
    static ListTerm s93 = new ListTerm(si75, s20);
    static SymbolTerm s94 = SymbolTerm.makeSymbol("18: ");
    static ListTerm s95 = new ListTerm(si79, s88);
    static SymbolTerm s96 = SymbolTerm.makeSymbol("19: ");
    static ListTerm s97 = new ListTerm(si13, s89);
    static SymbolTerm s98 = SymbolTerm.makeSymbol("20: ");
    static ListTerm s99 = new ListTerm(si2, s5);
    static ListTerm s100 = new ListTerm(si2, s99);
    static ListTerm s101 = new ListTerm(si12, s100);
    static ListTerm s102 = new ListTerm(si12, s101);
    static SymbolTerm s103 = SymbolTerm.makeSymbol("21: ");
    static ListTerm s104 = new ListTerm(si12, s99);
    static ListTerm s105 = new ListTerm(si2, s104);
    static ListTerm s106 = new ListTerm(si12, s105);
    static SymbolTerm s107 = SymbolTerm.makeSymbol("22: ");
    static ListTerm s108 = new ListTerm(si2, s26);
    static ListTerm s109 = new ListTerm(si2, s108);
    static ListTerm s110 = new ListTerm(si12, s109);
    static SymbolTerm s111 = SymbolTerm.makeSymbol("23: ");
    static SymbolTerm s112 = SymbolTerm.makeSymbol("24: ");
    static ListTerm s113 = new ListTerm(si12, s89);
    static ListTerm s114 = new ListTerm(si12, s113);
    static ListTerm s115 = new ListTerm(si12, s114);
    static SymbolTerm s116 = SymbolTerm.makeSymbol("25: ");
    static ListTerm s117 = new ListTerm(si12, s88);
    static ListTerm s118 = new ListTerm(si12, s117);
    static ListTerm s119 = new ListTerm(si2, s118);
    static ListTerm s120 = new ListTerm(si12, s119);
    static SymbolTerm s121 = SymbolTerm.makeSymbol("26: ");
    static ListTerm s122 = new ListTerm(si12, s118);
    static ListTerm s123 = new ListTerm(si12, s122);
    static ListTerm s124 = new ListTerm(si12, s123);
    static SymbolTerm s125 = SymbolTerm.makeSymbol("27: ");
    static IntegerTerm si126 = new IntegerTerm(90);
    static ListTerm s127 = new ListTerm(si126, s88);
    static ListTerm s128 = new ListTerm(si39, s127);
    static ListTerm s129 = new ListTerm(si39, s128);
    static ListTerm s130 = new ListTerm(si39, s129);
    static ListTerm s131 = new ListTerm(si12, s130);
    static ListTerm s132 = new ListTerm(si12, s131);
    static SymbolTerm s133 = SymbolTerm.makeSymbol("28: ");
    static ListTerm s134 = new ListTerm(si126, s20);
    static ListTerm s135 = new ListTerm(si39, s134);
    static ListTerm s136 = new ListTerm(si39, s135);
    static ListTerm s137 = new ListTerm(si39, s136);
    static ListTerm s138 = new ListTerm(si12, s137);
    static ListTerm s139 = new ListTerm(si2, s138);
    static ListTerm s140 = new ListTerm(si12, s139);
    static SymbolTerm s141 = SymbolTerm.makeSymbol("29: ");
    static ListTerm s142 = new ListTerm(si39, s137);
    static ListTerm s143 = new ListTerm(si39, s142);
    static ListTerm s144 = new ListTerm(si39, s143);
    static ListTerm s145 = new ListTerm(si39, s144);
    static ListTerm s146 = new ListTerm(si12, s145);
    static ListTerm s147 = new ListTerm(si12, s146);
    static SymbolTerm s148 = SymbolTerm.makeSymbol("30: ");
    static SymbolTerm s149 = SymbolTerm.makeSymbol("31: ");
    static SymbolTerm s150 = SymbolTerm.makeSymbol("32: ");
    static ListTerm s151 = new ListTerm(si3, s117);
    static SymbolTerm s152 = SymbolTerm.makeSymbol("33: ");
    static ListTerm s153 = new ListTerm(si1, s120);
    static SymbolTerm s154 = SymbolTerm.makeSymbol("34: ");
    static SymbolTerm s155 = SymbolTerm.makeSymbol("35: ");
    static ListTerm s156 = new ListTerm(si13, s84);
    static SymbolTerm s157 = SymbolTerm.makeSymbol("36: ");
    static SymbolTerm s158 = SymbolTerm.makeSymbol("37: ");
    static SymbolTerm s159 = SymbolTerm.makeSymbol("38: ");
    static ListTerm s160 = new ListTerm(si13, s80);
    static ListTerm s161 = new ListTerm(si1, s160);
    static SymbolTerm s162 = SymbolTerm.makeSymbol("39: ");
    static ListTerm s163 = new ListTerm(si13, s14);
    static ListTerm s164 = new ListTerm(si2, s163);
    static SymbolTerm s165 = SymbolTerm.makeSymbol("40: ");
    static ListTerm s166 = new ListTerm(si13, s20);
    static ListTerm s167 = new ListTerm(si3, s166);
    static SymbolTerm s168 = SymbolTerm.makeSymbol("41: ");
    static ListTerm s169 = new ListTerm(si61, s5);
    static SymbolTerm s170 = SymbolTerm.makeSymbol("42: ");
    static SymbolTerm s171 = SymbolTerm.makeSymbol("43: ");
    static IntegerTerm si172 = new IntegerTerm(450);
    static ListTerm s173 = new ListTerm(si172, s51);
    static SymbolTerm s174 = SymbolTerm.makeSymbol("44: ");
    static SymbolTerm s175 = SymbolTerm.makeSymbol("45: ");
    static ListTerm s176 = new ListTerm(si3, s20);
    static ListTerm s177 = new ListTerm(si13, s176);
    static SymbolTerm s178 = SymbolTerm.makeSymbol("46: ");
    static IntegerTerm si179 = new IntegerTerm(210);
    static ListTerm s180 = new ListTerm(si3, s51);
    static ListTerm s181 = new ListTerm(si179, s180);
    static SymbolTerm s182 = SymbolTerm.makeSymbol("47: ");
    static IntegerTerm si183 = new IntegerTerm(390);
    static ListTerm s184 = new ListTerm(si183, s4);
    static ListTerm s185 = new ListTerm(si39, s184);
    static ListTerm s186 = new ListTerm(si39, s185);
    static ListTerm s187 = new ListTerm(si39, s186);
    static ListTerm s188 = new ListTerm(si1, s187);
    static SymbolTerm s189 = SymbolTerm.makeSymbol("48: ");
    static IntegerTerm si190 = new IntegerTerm(270);
    static ListTerm s191 = new ListTerm(si190, s4);
    static ListTerm s192 = new ListTerm(si39, s191);
    static ListTerm s193 = new ListTerm(si39, s192);
    static ListTerm s194 = new ListTerm(si39, s193);
    static ListTerm s195 = new ListTerm(si39, s194);
    static ListTerm s196 = new ListTerm(si39, s195);
    static ListTerm s197 = new ListTerm(si39, s196);
    static ListTerm s198 = new ListTerm(si39, s197);
    static ListTerm s199 = new ListTerm(si1, s198);
    static SymbolTerm s200 = SymbolTerm.makeSymbol("49: ");
    static ListTerm s201 = new ListTerm(si39, s44);
    static ListTerm s202 = new ListTerm(si39, s201);
    static ListTerm s203 = new ListTerm(si39, s202);
    static ListTerm s204 = new ListTerm(si39, s203);
    static ListTerm s205 = new ListTerm(si39, s204);
    static ListTerm s206 = new ListTerm(si39, s205);
    static ListTerm s207 = new ListTerm(si39, s206);
    static ListTerm s208 = new ListTerm(si39, s207);
    static ListTerm s209 = new ListTerm(si1, s208);
    static SymbolTerm s210 = SymbolTerm.makeSymbol("50: ");
    static ListTerm s211 = new ListTerm(si12, s52);
    static ListTerm s212 = new ListTerm(si39, s211);
    static ListTerm s213 = new ListTerm(si39, s212);
    static ListTerm s214 = new ListTerm(si12, s213);
    static ListTerm s215 = new ListTerm(si39, s214);
    static ListTerm s216 = new ListTerm(si39, s215);
    static ListTerm s217 = new ListTerm(si12, s216);
    static ListTerm s218 = new ListTerm(si39, s217);
    static ListTerm s219 = new ListTerm(si39, s218);
    static ListTerm s220 = new ListTerm(si12, s219);
    static ListTerm s221 = new ListTerm(si1, s220);
    static SymbolTerm s222 = SymbolTerm.makeSymbol("51: ");
    static ListTerm s223 = new ListTerm(si12, s51);
    static ListTerm s224 = new ListTerm(si39, s223);
    static ListTerm s225 = new ListTerm(si39, s224);
    static ListTerm s226 = new ListTerm(si12, s225);
    static ListTerm s227 = new ListTerm(si39, s226);
    static ListTerm s228 = new ListTerm(si39, s227);
    static ListTerm s229 = new ListTerm(si12, s228);
    static ListTerm s230 = new ListTerm(si39, s229);
    static ListTerm s231 = new ListTerm(si39, s230);
    static ListTerm s232 = new ListTerm(si12, s231);
    static ListTerm s233 = new ListTerm(si39, s232);
    static ListTerm s234 = new ListTerm(si1, s233);
    static SymbolTerm s235 = SymbolTerm.makeSymbol("52: ");
    static ListTerm s236 = new ListTerm(si39, s20);
    static ListTerm s237 = new ListTerm(si39, s236);
    static ListTerm s238 = new ListTerm(si12, s237);
    static ListTerm s239 = new ListTerm(si39, s238);
    static ListTerm s240 = new ListTerm(si39, s239);
    static ListTerm s241 = new ListTerm(si12, s240);
    static ListTerm s242 = new ListTerm(si39, s241);
    static ListTerm s243 = new ListTerm(si39, s242);
    static ListTerm s244 = new ListTerm(si12, s243);
    static ListTerm s245 = new ListTerm(si39, s244);
    static ListTerm s246 = new ListTerm(si39, s245);
    static ListTerm s247 = new ListTerm(si1, s246);
    static SymbolTerm s248 = SymbolTerm.makeSymbol("53: ");
    static ListTerm s249 = new ListTerm(si12, s53);
    static ListTerm s250 = new ListTerm(si39, s249);
    static ListTerm s251 = new ListTerm(si39, s250);
    static ListTerm s252 = new ListTerm(si12, s251);
    static ListTerm s253 = new ListTerm(si39, s252);
    static ListTerm s254 = new ListTerm(si39, s253);
    static ListTerm s255 = new ListTerm(si12, s254);
    static ListTerm s256 = new ListTerm(si39, s255);
    static ListTerm s257 = new ListTerm(si39, s256);
    static ListTerm s258 = new ListTerm(si39, s257);
    static SymbolTerm s259 = SymbolTerm.makeSymbol("54: ");

    public PRED_test_syncopation_0(Predicate cont) {
        this.cont = cont;
    }

    public PRED_test_syncopation_0(){}

    public void setArgument(Term[] args, Predicate cont) {
        this.cont = cont;
    }

    public int arity() { return 0; }

    public String toString() {
        return "test_syncopation";
    }

    public Predicate exec(Prolog engine) {
    // test_syncopation:-test_syncopation_helper([0,120,240,120],'1 : '),test_syncopation_helper([120,240,120],'2 : '),test_syncopation_helper([120,240,120],'3 : '),test_syncopation_helper([0,60,180,60,180],'4 : '),test_syncopation_helper([120,60,180,60,60],'5 : '),test_syncopation_helper([0,60,60,120,60,60,120],'6 : '),test_syncopation_helper([0,120,60,60,120,60,60],'7 : '),test_syncopation_helper([0,30,30,30,150,30,30,30,150],'8 : '),test_syncopation_helper([120,30,30,30,150,30,30,30,30],'9 : '),test_syncopation_helper([360,30,30,30,30],'10: '),test_syncopation_helper([0,120,120,120,30,30,30,30],'11: '),test_syncopation_helper([0,120,240,30,30,30,30],'12: '),test_syncopation_helper([0,360,30,30,30,30],'13: '),test_syncopation_helper([60,420],'14: '),test_syncopation_helper([60,120,300],'15: '),test_syncopation_helper([60,120,120,180],'16: '),test_syncopation_helper([60,120,120,120,60],'17: '),test_syncopation_helper([420,60],'18: '),test_syncopation_helper([300,120,60],'19: '),test_syncopation_helper([180,120,120,60],'20: '),test_syncopation_helper([60,60,120,120,120],'21: '),test_syncopation_helper([60,120,60,120,120],'22: '),test_syncopation_helper([60,120,120,60,120],'23: '),test_syncopation_helper([60,120,120,120,60],'24: '),test_syncopation_helper([60,60,60,120,120,60],'25: '),test_syncopation_helper([60,120,60,60,120,60],'26: '),test_syncopation_helper([60,60,60,60,60,120,60],'27: '),test_syncopation_helper([60,60,30,30,30,90,120,60],'28: '),test_syncopation_helper([60,120,60,30,30,30,90,60],'29: '),test_syncopation_helper([60,60,30,30,30,30,30,30,30,90,60],'30: '),test_syncopation_helper([60,120,60,30,30,30,90,60],'31: '),test_syncopation_helper([60,60,30,30,30,30,30,30,30,90,60],'32: '),test_syncopation_helper([240,60,120,60],'33: '),test_syncopation_helper([0,60,120,60,60,120,60],'34: '),test_syncopation_helper([60,120,300],'35: '),test_syncopation_helper([180,120,180],'36: '),test_syncopation_helper([300,120,60],'37: '),test_syncopation_helper([60,120,120,120,60],'38: '),test_syncopation_helper([0,180,300],'39: '),test_syncopation_helper([120,180,180],'40: '),test_syncopation_helper([240,180,60],'41: '),test_syncopation_helper([360,120],'42: '),test_syncopation_helper([420,60],'43: '),test_syncopation_helper([450,30],'44: '),test_syncopation_helper([120,240,120],'45: '),test_syncopation_helper([180,240,60],'46: '),test_syncopation_helper([210,240,30],'47: '),test_syncopation_helper([0,30,30,30,390],'48: '),test_syncopation_helper([0,30,30,30,30,30,30,30,270],'49: '),test_syncopation_helper([0,30,30,30,30,30,30,30,30,30,30,30,150],'50: '),test_syncopation_helper([0,60,30,30,60,30,30,60,30,30,60,30,30],'51: '),test_syncopation_helper([0,30,60,30,30,60,30,30,60,30,30,60,30],'52: '),test_syncopation_helper([0,30,30,60,30,30,60,30,30,60,30,30,60],'53: '),test_syncopation_helper([30,30,30,60,30,30,60,30,30,60,30,30,30],'54: ')
        engine.setB0();
        Predicate p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20, p21, p22, p23, p24, p25, p26, p27, p28, p29, p30, p31, p32, p33, p34, p35, p36, p37, p38, p39, p40, p41, p42, p43, p44, p45, p46, p47, p48, p49, p50, p51, p52, p53;
    // test_syncopation:-[test_syncopation_helper([0,120,240,120],'1 : '),test_syncopation_helper([120,240,120],'2 : '),test_syncopation_helper([120,240,120],'3 : '),test_syncopation_helper([0,60,180,60,180],'4 : '),test_syncopation_helper([120,60,180,60,60],'5 : '),test_syncopation_helper([0,60,60,120,60,60,120],'6 : '),test_syncopation_helper([0,120,60,60,120,60,60],'7 : '),test_syncopation_helper([0,30,30,30,150,30,30,30,150],'8 : '),test_syncopation_helper([120,30,30,30,150,30,30,30,30],'9 : '),test_syncopation_helper([360,30,30,30,30],'10: '),test_syncopation_helper([0,120,120,120,30,30,30,30],'11: '),test_syncopation_helper([0,120,240,30,30,30,30],'12: '),test_syncopation_helper([0,360,30,30,30,30],'13: '),test_syncopation_helper([60,420],'14: '),test_syncopation_helper([60,120,300],'15: '),test_syncopation_helper([60,120,120,180],'16: '),test_syncopation_helper([60,120,120,120,60],'17: '),test_syncopation_helper([420,60],'18: '),test_syncopation_helper([300,120,60],'19: '),test_syncopation_helper([180,120,120,60],'20: '),test_syncopation_helper([60,60,120,120,120],'21: '),test_syncopation_helper([60,120,60,120,120],'22: '),test_syncopation_helper([60,120,120,60,120],'23: '),test_syncopation_helper([60,120,120,120,60],'24: '),test_syncopation_helper([60,60,60,120,120,60],'25: '),test_syncopation_helper([60,120,60,60,120,60],'26: '),test_syncopation_helper([60,60,60,60,60,120,60],'27: '),test_syncopation_helper([60,60,30,30,30,90,120,60],'28: '),test_syncopation_helper([60,120,60,30,30,30,90,60],'29: '),test_syncopation_helper([60,60,30,30,30,30,30,30,30,90,60],'30: '),test_syncopation_helper([60,120,60,30,30,30,90,60],'31: '),test_syncopation_helper([60,60,30,30,30,30,30,30,30,90,60],'32: '),test_syncopation_helper([240,60,120,60],'33: '),test_syncopation_helper([0,60,120,60,60,120,60],'34: '),test_syncopation_helper([60,120,300],'35: '),test_syncopation_helper([180,120,180],'36: '),test_syncopation_helper([300,120,60],'37: '),test_syncopation_helper([60,120,120,120,60],'38: '),test_syncopation_helper([0,180,300],'39: '),test_syncopation_helper([120,180,180],'40: '),test_syncopation_helper([240,180,60],'41: '),test_syncopation_helper([360,120],'42: '),test_syncopation_helper([420,60],'43: '),test_syncopation_helper([450,30],'44: '),test_syncopation_helper([120,240,120],'45: '),test_syncopation_helper([180,240,60],'46: '),test_syncopation_helper([210,240,30],'47: '),test_syncopation_helper([0,30,30,30,390],'48: '),test_syncopation_helper([0,30,30,30,30,30,30,30,270],'49: '),test_syncopation_helper([0,30,30,30,30,30,30,30,30,30,30,30,150],'50: '),test_syncopation_helper([0,60,30,30,60,30,30,60,30,30,60,30,30],'51: '),test_syncopation_helper([0,30,60,30,30,60,30,30,60,30,30,60,30],'52: '),test_syncopation_helper([0,30,30,60,30,30,60,30,30,60,30,30,60],'53: '),test_syncopation_helper([30,30,30,60,30,30,60,30,30,60,30,30,30],'54: ')]
        p1 = new PRED_test_syncopation_helper_2(s258, s259, cont);
        p2 = new PRED_test_syncopation_helper_2(s247, s248, p1);
        p3 = new PRED_test_syncopation_helper_2(s234, s235, p2);
        p4 = new PRED_test_syncopation_helper_2(s221, s222, p3);
        p5 = new PRED_test_syncopation_helper_2(s209, s210, p4);
        p6 = new PRED_test_syncopation_helper_2(s199, s200, p5);
        p7 = new PRED_test_syncopation_helper_2(s188, s189, p6);
        p8 = new PRED_test_syncopation_helper_2(s181, s182, p7);
        p9 = new PRED_test_syncopation_helper_2(s177, s178, p8);
        p10 = new PRED_test_syncopation_helper_2(s7, s175, p9);
        p11 = new PRED_test_syncopation_helper_2(s173, s174, p10);
        p12 = new PRED_test_syncopation_helper_2(s93, s171, p11);
        p13 = new PRED_test_syncopation_helper_2(s169, s170, p12);
        p14 = new PRED_test_syncopation_helper_2(s167, s168, p13);
        p15 = new PRED_test_syncopation_helper_2(s164, s165, p14);
        p16 = new PRED_test_syncopation_helper_2(s161, s162, p15);
        p17 = new PRED_test_syncopation_helper_2(s91, s159, p16);
        p18 = new PRED_test_syncopation_helper_2(s95, s158, p17);
        p19 = new PRED_test_syncopation_helper_2(s156, s157, p18);
        p20 = new PRED_test_syncopation_helper_2(s82, s155, p19);
        p21 = new PRED_test_syncopation_helper_2(s153, s154, p20);
        p22 = new PRED_test_syncopation_helper_2(s151, s152, p21);
        p23 = new PRED_test_syncopation_helper_2(s147, s150, p22);
        p24 = new PRED_test_syncopation_helper_2(s140, s149, p23);
        p25 = new PRED_test_syncopation_helper_2(s147, s148, p24);
        p26 = new PRED_test_syncopation_helper_2(s140, s141, p25);
        p27 = new PRED_test_syncopation_helper_2(s132, s133, p26);
        p28 = new PRED_test_syncopation_helper_2(s124, s125, p27);
        p29 = new PRED_test_syncopation_helper_2(s120, s121, p28);
        p30 = new PRED_test_syncopation_helper_2(s115, s116, p29);
        p31 = new PRED_test_syncopation_helper_2(s91, s112, p30);
        p32 = new PRED_test_syncopation_helper_2(s110, s111, p31);
        p33 = new PRED_test_syncopation_helper_2(s106, s107, p32);
        p34 = new PRED_test_syncopation_helper_2(s102, s103, p33);
        p35 = new PRED_test_syncopation_helper_2(s97, s98, p34);
        p36 = new PRED_test_syncopation_helper_2(s95, s96, p35);
        p37 = new PRED_test_syncopation_helper_2(s93, s94, p36);
        p38 = new PRED_test_syncopation_helper_2(s91, s92, p37);
        p39 = new PRED_test_syncopation_helper_2(s86, s87, p38);
        p40 = new PRED_test_syncopation_helper_2(s82, s83, p39);
        p41 = new PRED_test_syncopation_helper_2(s77, s78, p40);
        p42 = new PRED_test_syncopation_helper_2(s73, s74, p41);
        p43 = new PRED_test_syncopation_helper_2(s71, s72, p42);
        p44 = new PRED_test_syncopation_helper_2(s67, s68, p43);
        p45 = new PRED_test_syncopation_helper_2(s62, s63, p44);
        p46 = new PRED_test_syncopation_helper_2(s59, s60, p45);
        p47 = new PRED_test_syncopation_helper_2(s49, s50, p46);
        p48 = new PRED_test_syncopation_helper_2(s37, s38, p47);
        p49 = new PRED_test_syncopation_helper_2(s31, s32, p48);
        p50 = new PRED_test_syncopation_helper_2(s24, s25, p49);
        p51 = new PRED_test_syncopation_helper_2(s18, s19, p50);
        p52 = new PRED_test_syncopation_helper_2(s7, s11, p51);
        p53 = new PRED_test_syncopation_helper_2(s7, s10, p52);
        return new PRED_test_syncopation_helper_2(s8, s9, p53);
    }
}
