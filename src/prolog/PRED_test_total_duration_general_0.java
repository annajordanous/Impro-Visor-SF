package prolog;

import jp.ac.kobe_u.cs.prolog.lang.*;
import jp.ac.kobe_u.cs.prolog.builtin.*;
/*
 This file is generated by Prolog Cafe.
 PLEASE DO NOT EDIT!
*/
/**
 <code>test_total_duration_general/0</code> defined in attributes.pro<br>
 @author Mutsunori Banbara (banbara@kobe-u.ac.jp)
 @author Naoyuki Tamura (tamura@kobe-u.ac.jp)
 @version 1.0
*/
public class PRED_test_total_duration_general_0 extends Predicate {
    static SymbolTerm s1 = SymbolTerm.makeSymbol("t", 2);
    static SymbolTerm s2 = SymbolTerm.makeSymbol("a");
    static IntegerTerm si3 = new IntegerTerm(1);
    static Term[] s4 = {s2, si3};
    static StructureTerm s5 = new StructureTerm(s1, s4);
    static SymbolTerm s6 = SymbolTerm.makeSymbol("b");
    static IntegerTerm si7 = new IntegerTerm(2);
    static Term[] s8 = {s6, si7};
    static StructureTerm s9 = new StructureTerm(s1, s8);
    static SymbolTerm s10 = SymbolTerm.makeSymbol("slope", 3);
    static SymbolTerm s11 = SymbolTerm.makeSymbol("c");
    static IntegerTerm si12 = new IntegerTerm(3);
    static Term[] s13 = {s11, si12};
    static StructureTerm s14 = new StructureTerm(s1, s13);
    static SymbolTerm s15 = SymbolTerm.makeSymbol("d");
    static IntegerTerm si16 = new IntegerTerm(4);
    static Term[] s17 = {s15, si16};
    static StructureTerm s18 = new StructureTerm(s1, s17);
    static SymbolTerm s19 = SymbolTerm.makeSymbol("[]");
    static ListTerm s20 = new ListTerm(s18, s19);
    static ListTerm s21 = new ListTerm(s14, s20);
    static IntegerTerm si22 = new IntegerTerm(10);

    public PRED_test_total_duration_general_0(Predicate cont) {
        this.cont = cont;
    }

    public PRED_test_total_duration_general_0(){}

    public void setArgument(Term[] args, Predicate cont) {
        this.cont = cont;
    }

    public int arity() { return 0; }

    public String toString() {
        return "test_total_duration_general";
    }

    public Predicate exec(Prolog engine) {
    // test_total_duration_general:-total_duration_general([t(a,1),t(b,2),slope(A,B,[t(c,3),t(d,4)])],10)
        engine.setB0();
        Term a1, a2, a3, a4;
    // test_total_duration_general:-[total_duration_general([t(a,1),t(b,2),slope(A,B,[t(c,3),t(d,4)])],10)]
        Term[] y1 = {new VariableTerm(engine), new VariableTerm(engine), s21};
        a1 = new StructureTerm(s10, y1);
        a2 = new ListTerm(a1, s19);
        a3 = new ListTerm(s9, a2);
        a4 = new ListTerm(s5, a3);
        return new PRED_total_duration_general_2(a4, si22, cont);
    }
}
