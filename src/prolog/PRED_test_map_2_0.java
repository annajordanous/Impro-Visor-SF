import jp.ac.kobe_u.cs.prolog.lang.*;
import jp.ac.kobe_u.cs.prolog.builtin.*;
/*
 This file is generated by Prolog Cafe.
 PLEASE DO NOT EDIT!
*/
/**
 <code>test_map_2/0</code> defined in functional.pro<br>
 @author Mutsunori Banbara (banbara@kobe-u.ac.jp)
 @author Naoyuki Tamura (tamura@kobe-u.ac.jp)
 @version 1.0
*/
public class PRED_test_map_2_0 extends Predicate {
    static IntegerTerm si1 = new IntegerTerm(1);
    static IntegerTerm si2 = new IntegerTerm(2);
    static IntegerTerm si3 = new IntegerTerm(3);
    static SymbolTerm s4 = SymbolTerm.makeSymbol("[]");
    static ListTerm s5 = new ListTerm(si3, s4);
    static ListTerm s6 = new ListTerm(si2, s5);
    static ListTerm s7 = new ListTerm(si1, s6);
    static IntegerTerm si8 = new IntegerTerm(4);
    static IntegerTerm si9 = new IntegerTerm(5);
    static IntegerTerm si10 = new IntegerTerm(6);
    static ListTerm s11 = new ListTerm(si10, s4);
    static ListTerm s12 = new ListTerm(si9, s11);
    static ListTerm s13 = new ListTerm(si8, s12);
    static SymbolTerm s14 = SymbolTerm.makeSymbol("plus");
    static IntegerTerm si15 = new IntegerTerm(7);
    static IntegerTerm si16 = new IntegerTerm(9);
    static ListTerm s17 = new ListTerm(si16, s4);
    static ListTerm s18 = new ListTerm(si15, s17);
    static ListTerm s19 = new ListTerm(si9, s18);

    public PRED_test_map_2_0(Predicate cont) {
        this.cont = cont;
    }

    public PRED_test_map_2_0(){}

    public void setArgument(Term[] args, Predicate cont) {
        this.cont = cont;
    }

    public int arity() { return 0; }

    public String toString() {
        return "test_map_2";
    }

    public Predicate exec(Prolog engine) {
    // test_map_2:-map_2([1,2,3],[4,5,6],plus,[5,7,9])
        engine.setB0();
    // test_map_2:-[map_2([1,2,3],[4,5,6],plus,[5,7,9])]
        return new PRED_map_2_4(s7, s13, s14, s19, cont);
    }
}
