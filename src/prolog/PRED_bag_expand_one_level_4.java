package prolog;

import prolog.PRED_map_modify_weights_4;
import prolog.PRED_matrix_transpose_2;
import jp.ac.kobe_u.cs.prolog.lang.*;
import jp.ac.kobe_u.cs.prolog.builtin.*;
/*
 This file is generated by Prolog Cafe.
 PLEASE DO NOT EDIT!
*/
/**
 <code>bag_expand_one_level/4</code> defined in rule_expander.pro<br>
 @author Mutsunori Banbara (banbara@kobe-u.ac.jp)
 @author Naoyuki Tamura (tamura@kobe-u.ac.jp)
 @version 1.0
*/
public class PRED_bag_expand_one_level_4 extends Predicate {
    static SymbolTerm s1 = SymbolTerm.makeSymbol("[]");
    static SymbolTerm s2 = SymbolTerm.makeSymbol(":", 2);
    static SymbolTerm s3 = SymbolTerm.makeSymbol("user");
    static SymbolTerm s4 = SymbolTerm.makeSymbol("expand_one_level_and_get_attrs", 4);

    public Term arg1, arg2, arg3, arg4;

    public PRED_bag_expand_one_level_4(Term a1, Term a2, Term a3, Term a4, Predicate cont) {
        arg1 = a1;
        arg2 = a2;
        arg3 = a3;
        arg4 = a4;
        this.cont = cont;
    }

    public PRED_bag_expand_one_level_4(){}

    public void setArgument(Term[] args, Predicate cont) {
        arg1 = args[0];
        arg2 = args[1];
        arg3 = args[2];
        arg4 = args[3];
        this.cont = cont;
    }

    public int arity() { return 4; }

    public String toString() {
        return "bag_expand_one_level(" + arg1 + "," + arg2 + "," + arg3 + "," + arg4 + ")";
    }

    public Predicate exec(Prolog engine) {
    // bag_expand_one_level(A,B,C,D):-bagof([E,F,G],expand_one_level_and_get_attrs(A,E,F,G),H),matrix_transpose(H,[B,I,J]),map_modify_weights(J,I,D,C)
        engine.setB0();
        Term a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18;
        Predicate p1, p2;
        a1 = arg1;
        a2 = arg2;
        a3 = arg3;
        a4 = arg4;
    // bag_expand_one_level(A,B,C,D):-[bagof([E,F,G],user:expand_one_level_and_get_attrs(A,E,F,G),H),matrix_transpose(H,[B,I,J]),map_modify_weights(J,I,D,C)]
        a5 = new VariableTerm(engine);
        a6 = new VariableTerm(engine);
        a7 = new VariableTerm(engine);
        a8 = new ListTerm(a7, s1);
        a9 = new ListTerm(a6, a8);
        a10 = new ListTerm(a5, a9);
        Term[] y1 = {a1, a5, a6, a7};
        a11 = new StructureTerm(s4, y1);
        Term[] y2 = {s3, a11};
        a12 = new StructureTerm(s2, y2);
        a13 = new VariableTerm(engine);
        a14 = new VariableTerm(engine);
        a15 = new VariableTerm(engine);
        a16 = new ListTerm(a15, s1);
        a17 = new ListTerm(a14, a16);
        a18 = new ListTerm(a2, a17);
        p1 = new PRED_map_modify_weights_4(a15, a14, a4, a3, cont);
        p2 = new PRED_matrix_transpose_2(a13, a18, p1);
        return new PRED_bagof_3(a10, a12, a13, p2);
    }
}
