package prolog;

import jp.ac.kobe_u.cs.prolog.lang.*;
import jp.ac.kobe_u.cs.prolog.builtin.*;
/*
 This file is generated by Prolog Cafe.
 PLEASE DO NOT EDIT!
*/
/**
 <code>test_syncopation_helper/2</code> defined in syncopation.pro<br>
 @author Mutsunori Banbara (banbara@kobe-u.ac.jp)
 @author Naoyuki Tamura (tamura@kobe-u.ac.jp)
 @version 1.0
*/
public class PRED_test_syncopation_helper_2 extends Predicate {
    static IntegerTerm si1 = new IntegerTerm(0);

    public Term arg1, arg2;

    public PRED_test_syncopation_helper_2(Term a1, Term a2, Predicate cont) {
        arg1 = a1;
        arg2 = a2;
        this.cont = cont;
    }

    public PRED_test_syncopation_helper_2(){}

    public void setArgument(Term[] args, Predicate cont) {
        arg1 = args[0];
        arg2 = args[1];
        this.cont = cont;
    }

    public int arity() { return 2; }

    public String toString() {
        return "test_syncopation_helper(" + arg1 + "," + arg2 + ")";
    }

    public Predicate exec(Prolog engine) {
    // test_syncopation_helper(A,B):-syncopation_helper(A,0,C),write(B),write(C),nl
        engine.setB0();
        Term a1, a2, a3;
        Predicate p1, p2, p3;
        a1 = arg1;
        a2 = arg2;
    // test_syncopation_helper(A,B):-[syncopation_helper(A,0,C),write(B),write(C),nl]
        a3 = new VariableTerm(engine);
        p1 = new PRED_nl_0(cont);
        p2 = new PRED_write_1(a3, p1);
        p3 = new PRED_write_1(a2, p2);
        return new PRED_syncopation_helper_3(a1, si1, a3, p3);
    }
}
