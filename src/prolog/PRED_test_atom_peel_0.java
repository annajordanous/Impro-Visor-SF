import jp.ac.kobe_u.cs.prolog.lang.*;
import jp.ac.kobe_u.cs.prolog.builtin.*;
/*
 This file is generated by Prolog Cafe.
 PLEASE DO NOT EDIT!
*/
/**
 <code>test_atom_peel/0</code> defined in rule_initialize.pro<br>
 @author Mutsunori Banbara (banbara@kobe-u.ac.jp)
 @author Naoyuki Tamura (tamura@kobe-u.ac.jp)
 @version 1.0
*/
public class PRED_test_atom_peel_0 extends Predicate {
    static SymbolTerm s1 = SymbolTerm.makeSymbol("8+5");
    static SymbolTerm s2 = SymbolTerm.makeSymbol("+");
    static SymbolTerm s3 = SymbolTerm.makeSymbol("8");
    static SymbolTerm s4 = SymbolTerm.makeSymbol("5");
    static SymbolTerm s5 = SymbolTerm.makeSymbol("8/5");
    static SymbolTerm s6 = SymbolTerm.makeSymbol("/");
    static SymbolTerm s7 = SymbolTerm.makeSymbol("8//5");
    static SymbolTerm s8 = SymbolTerm.makeSymbol("//");

    public PRED_test_atom_peel_0(Predicate cont) {
        this.cont = cont;
    }

    public PRED_test_atom_peel_0(){}

    public void setArgument(Term[] args, Predicate cont) {
        this.cont = cont;
    }

    public int arity() { return 0; }

    public String toString() {
        return "test_atom_peel";
    }

    public Predicate exec(Prolog engine) {
    // test_atom_peel:-atom_peel('8+5',+,'8','5'),atom_peel('8/5',/,'8','5'),atom_peel('8//5',//,'8','5')
        engine.setB0();
        Predicate p1, p2;
    // test_atom_peel:-[atom_peel('8+5',+,'8','5'),atom_peel('8/5',/,'8','5'),atom_peel('8//5',//,'8','5')]
        p1 = new PRED_atom_peel_4(s7, s8, s3, s4, cont);
        p2 = new PRED_atom_peel_4(s5, s6, s3, s4, p1);
        return new PRED_atom_peel_4(s1, s2, s3, s4, p2);
    }
}
