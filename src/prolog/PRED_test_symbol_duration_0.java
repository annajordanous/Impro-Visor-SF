import jp.ac.kobe_u.cs.prolog.lang.*;
import jp.ac.kobe_u.cs.prolog.builtin.*;
/*
 This file is generated by Prolog Cafe.
 PLEASE DO NOT EDIT!
*/
/**
 <code>test_symbol_duration/0</code> defined in rule_database.pro<br>
 @author Mutsunori Banbara (banbara@kobe-u.ac.jp)
 @author Naoyuki Tamura (tamura@kobe-u.ac.jp)
 @version 1.0
*/
public class PRED_test_symbol_duration_0 extends Predicate {
    static SymbolTerm s1 = SymbolTerm.makeSymbol(":", 2);
    static SymbolTerm s2 = SymbolTerm.makeSymbol("user");
    static SymbolTerm s3 = SymbolTerm.makeSymbol("rule", 4);
    static SymbolTerm s4 = SymbolTerm.makeSymbol("seg120");
    static SymbolTerm s5 = SymbolTerm.makeSymbol("t", 2);
    static SymbolTerm s6 = SymbolTerm.makeSymbol("c");
    static IntegerTerm si7 = new IntegerTerm(120);
    static Term[] s8 = {s6, si7};
    static StructureTerm s9 = new StructureTerm(s5, s8);
    static SymbolTerm s10 = SymbolTerm.makeSymbol("[]");
    static ListTerm s11 = new ListTerm(s9, s10);
    static IntegerTerm si12 = new IntegerTerm(1);
    static SymbolTerm s13 = SymbolTerm.makeSymbol("true");
    static Term[] s14 = {s4, s11, si12, s13};
    static StructureTerm s15 = new StructureTerm(s3, s14);
    static Term[] s16 = {s2, s15};
    static StructureTerm s17 = new StructureTerm(s1, s16);

    public PRED_test_symbol_duration_0(Predicate cont) {
        this.cont = cont;
    }

    public PRED_test_symbol_duration_0(){}

    public void setArgument(Term[] args, Predicate cont) {
        this.cont = cont;
    }

    public int arity() { return 0; }

    public String toString() {
        return "test_symbol_duration";
    }

    public Predicate exec(Prolog engine) {
    // test_symbol_duration:-retract_rules,assert(rule(seg120,[t(c,120)],1,true)),symbol_duration(seg120,120),retract_rules
        engine.setB0();
        Predicate p1, p2, p3;
    // test_symbol_duration:-[retract_rules,assert(user:rule(seg120,[t(c,120)],1,true)),symbol_duration(seg120,120),retract_rules]
        p1 = new PRED_retract_rules_0(cont);
        p2 = new PRED_symbol_duration_2(s4, si7, p1);
        p3 = new PRED_assert_1(s17, p2);
        return new PRED_retract_rules_0(p3);
    }
}
