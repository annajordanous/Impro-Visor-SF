import jp.ac.kobe_u.cs.prolog.lang.*;
import jp.ac.kobe_u.cs.prolog.builtin.*;
/*
 This file is generated by Prolog Cafe.
 PLEASE DO NOT EDIT!
*/
/**
 <code>test_rule_expander/0</code> defined in rule_expander.pro<br>
 @author Mutsunori Banbara (banbara@kobe-u.ac.jp)
 @author Naoyuki Tamura (tamura@kobe-u.ac.jp)
 @version 1.0
*/
public class PRED_test_rule_expander_0 extends Predicate {
    static SymbolTerm s1 = SymbolTerm.makeSymbol("test_expand_one_level");
    static SymbolTerm s2 = SymbolTerm.makeSymbol("test_bag_expand_one_level");
    static SymbolTerm s3 = SymbolTerm.makeSymbol("test_expand_rand");
    static SymbolTerm s4 = SymbolTerm.makeSymbol("test_map_fn");
    static SymbolTerm s5 = SymbolTerm.makeSymbol("test_map");
    static SymbolTerm s6 = SymbolTerm.makeSymbol("test_rand_float");
    static SymbolTerm s7 = SymbolTerm.makeSymbol("test_assoc_and_pop");

    public PRED_test_rule_expander_0(Predicate cont) {
        this.cont = cont;
    }

    public PRED_test_rule_expander_0(){}

    public void setArgument(Term[] args, Predicate cont) {
        this.cont = cont;
    }

    public int arity() { return 0; }

    public String toString() {
        return "test_rule_expander";
    }

    public Predicate exec(Prolog engine) {
    // test_rule_expander:-test_helper(test_expand_one_level),test_helper(test_bag_expand_one_level),test_helper(test_expand_rand),test_helper(test_map_fn),test_helper(test_map),test_helper(test_rand_float),test_helper(test_assoc_and_pop)
        engine.setB0();
        Predicate p1, p2, p3, p4, p5, p6;
    // test_rule_expander:-[test_helper(test_expand_one_level),test_helper(test_bag_expand_one_level),test_helper(test_expand_rand),test_helper(test_map_fn),test_helper(test_map),test_helper(test_rand_float),test_helper(test_assoc_and_pop)]
        p1 = new PRED_test_helper_1(s7, cont);
        p2 = new PRED_test_helper_1(s6, p1);
        p3 = new PRED_test_helper_1(s5, p2);
        p4 = new PRED_test_helper_1(s4, p3);
        p5 = new PRED_test_helper_1(s3, p4);
        p6 = new PRED_test_helper_1(s2, p5);
        return new PRED_test_helper_1(s1, p6);
    }
}
