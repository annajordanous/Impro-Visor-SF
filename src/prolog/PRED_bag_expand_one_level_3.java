package prolog;

import prolog.PRED_matrix_transpose_2;
import jp.ac.kobe_u.cs.prolog.lang.*;
import jp.ac.kobe_u.cs.prolog.builtin.*;
/*
 This file is generated by Prolog Cafe.
 PLEASE DO NOT EDIT!
*/
/**
 <code>bag_expand_one_level/3</code> defined in rule_expander.pro<br>
 @author Mutsunori Banbara (banbara@kobe-u.ac.jp)
 @author Naoyuki Tamura (tamura@kobe-u.ac.jp)
 @version 1.0
*/
public class PRED_bag_expand_one_level_3 extends Predicate {
    static SymbolTerm s1 = SymbolTerm.makeSymbol("[]");
    static SymbolTerm s2 = SymbolTerm.makeSymbol(":", 2);
    static SymbolTerm s3 = SymbolTerm.makeSymbol("user");
    static SymbolTerm s4 = SymbolTerm.makeSymbol("expand_one_level", 3);

    public Term arg1, arg2, arg3;

    public PRED_bag_expand_one_level_3(Term a1, Term a2, Term a3, Predicate cont) {
        arg1 = a1;
        arg2 = a2;
        arg3 = a3;
        this.cont = cont;
    }

    public PRED_bag_expand_one_level_3(){}

    public void setArgument(Term[] args, Predicate cont) {
        arg1 = args[0];
        arg2 = args[1];
        arg3 = args[2];
        this.cont = cont;
    }

    public int arity() { return 3; }

    public String toString() {
        return "bag_expand_one_level(" + arg1 + "," + arg2 + "," + arg3 + ")";
    }

    public Predicate exec(Prolog engine) {
    // bag_expand_one_level(A,B,C):-bagof([D,E],expand_one_level(A,D,E),F),matrix_transpose(F,[B,C])
        engine.setB0();
        Term a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12;
        Predicate p1;
        a1 = arg1;
        a2 = arg2;
        a3 = arg3;
    // bag_expand_one_level(A,B,C):-[bagof([D,E],user:expand_one_level(A,D,E),F),matrix_transpose(F,[B,C])]
        a4 = new VariableTerm(engine);
        a5 = new VariableTerm(engine);
        a6 = new ListTerm(a5, s1);
        a7 = new ListTerm(a4, a6);
        Term[] y1 = {a1, a4, a5};
        a8 = new StructureTerm(s4, y1);
        Term[] y2 = {s3, a8};
        a9 = new StructureTerm(s2, y2);
        a10 = new VariableTerm(engine);
        a11 = new ListTerm(a3, s1);
        a12 = new ListTerm(a2, a11);
        p1 = new PRED_matrix_transpose_2(a10, a12, cont);
        return new PRED_bagof_3(a7, a9, a10, p1);
    }
}
