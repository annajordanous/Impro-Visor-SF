package prolog;

import jp.ac.kobe_u.cs.prolog.lang.*;
import jp.ac.kobe_u.cs.prolog.builtin.*;
/*
 This file is generated by Prolog Cafe.
 PLEASE DO NOT EDIT!
*/
/**
 <code>nth1/3</code> defined in plcafe_defs.pro<br>
 @author Mutsunori Banbara (banbara@kobe-u.ac.jp)
 @author Naoyuki Tamura (tamura@kobe-u.ac.jp)
 @version 1.0
*/
public class PRED_nth1_3 extends Predicate {

    public Term arg1, arg2, arg3;

    public PRED_nth1_3(Term a1, Term a2, Term a3, Predicate cont) {
        arg1 = a1;
        arg2 = a2;
        arg3 = a3;
        this.cont = cont;
    }

    public PRED_nth1_3(){}

    public void setArgument(Term[] args, Predicate cont) {
        arg1 = args[0];
        arg2 = args[1];
        arg3 = args[2];
        this.cont = cont;
    }

    public int arity() { return 3; }

    public String toString() {
        return "nth1(" + arg1 + "," + arg2 + "," + arg3 + ")";
    }

    public Predicate exec(Prolog engine) {
    // nth1(A,[B|C],D):-'$dummy_2_plcafe_defs.pro'(A,B,C,D,E)
        engine.setB0();
        Term a1, a2, a3, a4, a5;
        a1 = arg1;
        a2 = arg2;
        a3 = arg3;
    // nth1(A,[B|C],D):-['$dummy_2_plcafe_defs.pro'(A,B,C,D,E)]
        a2 = a2.dereference();
        if (a2.isList()){
            Term[] args = {((ListTerm)a2).car(), ((ListTerm)a2).cdr()};
            a4 = args[0];
            a5 = args[1];
        } else if (a2.isVariable()){
            a4 = new VariableTerm(engine);
            a5 = new VariableTerm(engine);
            ((VariableTerm) a2).bind(new ListTerm(a4, a5), engine.trail);
        } else {
            return engine.fail();
        }
        return new PRED_$dummy_2_plcafe_defs$002Epro_5(a1, a4, a5, a3, new VariableTerm(engine), cont);
    }
}
