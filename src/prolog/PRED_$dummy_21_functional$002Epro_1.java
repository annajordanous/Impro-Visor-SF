import jp.ac.kobe_u.cs.prolog.lang.*;
import jp.ac.kobe_u.cs.prolog.builtin.*;
/*
 This file is generated by Prolog Cafe.
 PLEASE DO NOT EDIT!
*/
/**
 <code>'$dummy_21_functional.pro'/1</code> defined in functional.pro<br>
 @author Mutsunori Banbara (banbara@kobe-u.ac.jp)
 @author Naoyuki Tamura (tamura@kobe-u.ac.jp)
 @version 1.0
*/
public class PRED_$dummy_21_functional$002Epro_1 extends Predicate {
    static Predicate _$dummy_21_functional$002Epro_1_sub_1 = new PRED_$dummy_21_functional$002Epro_1_sub_1();
    static Predicate _$dummy_21_functional$002Epro_1_1 = new PRED_$dummy_21_functional$002Epro_1_1();
    static Predicate _$dummy_21_functional$002Epro_1_2 = new PRED_$dummy_21_functional$002Epro_1_2();

    public Term arg1;

    public PRED_$dummy_21_functional$002Epro_1(Term a1, Predicate cont) {
        arg1 = a1;
        this.cont = cont;
    }

    public PRED_$dummy_21_functional$002Epro_1(){}

    public void setArgument(Term[] args, Predicate cont) {
        arg1 = args[0];
        this.cont = cont;
    }

    public int arity() { return 1; }

    public String toString() {
        return "$dummy_21_functional.pro(" + arg1 + ")";
    }

    public Predicate exec(Prolog engine) {
        engine.aregs[1] = arg1;
        engine.cont = cont;
        engine.setB0();
        return engine.jtry(_$dummy_21_functional$002Epro_1_1, _$dummy_21_functional$002Epro_1_sub_1);
    }
}

class PRED_$dummy_21_functional$002Epro_1_sub_1 extends PRED_$dummy_21_functional$002Epro_1 {
    public Predicate exec(Prolog engine) {
        return engine.trust(_$dummy_21_functional$002Epro_1_2);
    }
}

class PRED_$dummy_21_functional$002Epro_1_1 extends PRED_$dummy_21_functional$002Epro_1 {
    public Predicate exec(Prolog engine) {
    // '$dummy_21_functional.pro'(A):-'$dummy_22_functional.pro'(A),atom(A)
        Term a1;
        Predicate p1;
        Predicate cont;
        a1 = engine.aregs[1];
        cont = engine.cont;
    // '$dummy_21_functional.pro'(A):-['$dummy_22_functional.pro'(A),atom(A)]
        p1 = new PRED_atom_1(a1, cont);
        return new PRED_$dummy_22_functional$002Epro_1(a1, p1);
    }
}

class PRED_$dummy_21_functional$002Epro_1_2 extends PRED_$dummy_21_functional$002Epro_1 {
    public Predicate exec(Prolog engine) {
    // '$dummy_21_functional.pro'(A):-'$dummy_23_functional.pro'(A)
        Term a1;
        Predicate cont;
        a1 = engine.aregs[1];
        cont = engine.cont;
    // '$dummy_21_functional.pro'(A):-['$dummy_23_functional.pro'(A)]
        return new PRED_$dummy_23_functional$002Epro_1(a1, cont);
    }
}
