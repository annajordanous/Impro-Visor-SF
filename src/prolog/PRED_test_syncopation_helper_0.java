import jp.ac.kobe_u.cs.prolog.lang.*;
import jp.ac.kobe_u.cs.prolog.builtin.*;
/*
 This file is generated by Prolog Cafe.
 PLEASE DO NOT EDIT!
*/
/**
 <code>test_syncopation_helper/0</code> defined in syncopation.pro<br>
 @author Mutsunori Banbara (banbara@kobe-u.ac.jp)
 @author Naoyuki Tamura (tamura@kobe-u.ac.jp)
 @version 1.0
*/
public class PRED_test_syncopation_helper_0 extends Predicate {
    static IntegerTerm si1 = new IntegerTerm(1);
    static IntegerTerm si2 = new IntegerTerm(0);
    static IntegerTerm si3 = new IntegerTerm(120);
    static IntegerTerm si4 = new IntegerTerm(240);
    static SymbolTerm s5 = SymbolTerm.makeSymbol("[]");
    static ListTerm s6 = new ListTerm(si3, s5);
    static ListTerm s7 = new ListTerm(si4, s6);
    static ListTerm s8 = new ListTerm(si3, s7);
    static ListTerm s9 = new ListTerm(si2, s8);

    public PRED_test_syncopation_helper_0(Predicate cont) {
        this.cont = cont;
    }

    public PRED_test_syncopation_helper_0(){}

    public void setArgument(Term[] args, Predicate cont) {
        this.cont = cont;
    }

    public int arity() { return 0; }

    public String toString() {
        return "test_syncopation_helper";
    }

    public Predicate exec(Prolog engine) {
    // test_syncopation_helper:-beat_stress(A),sync_diff_const(B),C is 1+B,syncopation_helper([0,120,240,120],0,C)
        engine.setB0();
        Term a1, a2;
        Predicate p1, p2, p3;
    // test_syncopation_helper:-[beat_stress(A),sync_diff_const(B),'$plus'(1,B,C),syncopation_helper([0,120,240,120],0,C)]
        a1 = new VariableTerm(engine);
        a2 = new VariableTerm(engine);
        p1 = new PRED_syncopation_helper_3(s9, si2, a2, cont);
        p2 = new PRED_$plus_3(si1, a1, a2, p1);
        p3 = new PRED_sync_diff_const_1(a1, p2);
        return new PRED_beat_stress_1(new VariableTerm(engine), p3);
    }
}
