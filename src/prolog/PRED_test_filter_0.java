package prolog;

import jp.ac.kobe_u.cs.prolog.lang.*;
import jp.ac.kobe_u.cs.prolog.builtin.*;
/*
 This file is generated by Prolog Cafe.
 PLEASE DO NOT EDIT!
*/
/**
 <code>test_filter/0</code> defined in functional.pro<br>
 @author Mutsunori Banbara (banbara@kobe-u.ac.jp)
 @author Naoyuki Tamura (tamura@kobe-u.ac.jp)
 @version 1.0
*/
public class PRED_test_filter_0 extends Predicate {
    static IntegerTerm si1 = new IntegerTerm(1);
    static SymbolTerm s2 = SymbolTerm.makeSymbol("a");
    static IntegerTerm si3 = new IntegerTerm(2);
    static IntegerTerm si4 = new IntegerTerm(3);
    static SymbolTerm s5 = SymbolTerm.makeSymbol("[]");
    static ListTerm s6 = new ListTerm(si4, s5);
    static ListTerm s7 = new ListTerm(si3, s6);
    static ListTerm s8 = new ListTerm(si1, s7);
    static ListTerm s9 = new ListTerm(s8, s5);
    static ListTerm s10 = new ListTerm(s2, s9);
    static ListTerm s11 = new ListTerm(si1, s10);
    static SymbolTerm s12 = SymbolTerm.makeSymbol("number");
    static ListTerm s13 = new ListTerm(si1, s5);

    public PRED_test_filter_0(Predicate cont) {
        this.cont = cont;
    }

    public PRED_test_filter_0(){}

    public void setArgument(Term[] args, Predicate cont) {
        this.cont = cont;
    }

    public int arity() { return 0; }

    public String toString() {
        return "test_filter";
    }

    public Predicate exec(Prolog engine) {
    // test_filter:-filter([1,a,[1,2,3]],number,[1])
        engine.setB0();
    // test_filter:-[filter([1,a,[1,2,3]],number,[1])]
        return new PRED_filter_3(s11, s12, s13, cont);
    }
}
