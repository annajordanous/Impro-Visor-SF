import jp.ac.kobe_u.cs.prolog.lang.*;
import jp.ac.kobe_u.cs.prolog.builtin.*;
/*
 This file is generated by Prolog Cafe.
 PLEASE DO NOT EDIT!
*/
/**
 <code>erase/1</code> defined in plcafe_defs.pro<br>
 @author Mutsunori Banbara (banbara@kobe-u.ac.jp)
 @author Naoyuki Tamura (tamura@kobe-u.ac.jp)
 @version 1.0
*/
public class PRED_erase_1 extends Predicate {
    static SymbolTerm s1 = SymbolTerm.makeSymbol("recorded", 3);

    public Term arg1;

    public PRED_erase_1(Term a1, Predicate cont) {
        arg1 = a1;
        this.cont = cont;
    }

    public PRED_erase_1(){}

    public void setArgument(Term[] args, Predicate cont) {
        arg1 = args[0];
        this.cont = cont;
    }

    public int arity() { return 1; }

    public String toString() {
        return "erase(" + arg1 + ")";
    }

    public Predicate exec(Prolog engine) {
    // erase(A):-retractall_nonvar(recorded(B,C,A))
        engine.setB0();
        Term a1, a2;
        a1 = arg1;
    // erase(A):-[retractall_nonvar(recorded(B,C,A))]
        Term[] y1 = {new VariableTerm(engine), new VariableTerm(engine), a1};
        a2 = new StructureTerm(s1, y1);
        return new PRED_retractall_nonvar_1(a2, cont);
    }
}
