package prolog;

import jp.ac.kobe_u.cs.prolog.lang.*;
import jp.ac.kobe_u.cs.prolog.builtin.*;
/*
 This file is generated by Prolog Cafe.
 PLEASE DO NOT EDIT!
*/
/**
 <code>test_repeat/0</code> defined in functional.pro<br>
 @author Mutsunori Banbara (banbara@kobe-u.ac.jp)
 @author Naoyuki Tamura (tamura@kobe-u.ac.jp)
 @version 1.0
*/
public class PRED_test_repeat_0 extends Predicate {
    static SymbolTerm s1 = SymbolTerm.makeSymbol("anything");
    static IntegerTerm si2 = new IntegerTerm(0);
    static SymbolTerm s3 = SymbolTerm.makeSymbol("[]");
    static SymbolTerm s4 = SymbolTerm.makeSymbol("a");
    static IntegerTerm si5 = new IntegerTerm(3);
    static ListTerm s6 = new ListTerm(s4, s3);
    static ListTerm s7 = new ListTerm(s4, s6);
    static ListTerm s8 = new ListTerm(s4, s7);

    public PRED_test_repeat_0(Predicate cont) {
        this.cont = cont;
    }

    public PRED_test_repeat_0(){}

    public void setArgument(Term[] args, Predicate cont) {
        this.cont = cont;
    }

    public int arity() { return 0; }

    public String toString() {
        return "test_repeat";
    }

    public Predicate exec(Prolog engine) {
    // test_repeat:-repeat(anything,0,[]),repeat(a,3,[a,a,a])
        engine.setB0();
        Predicate p1;
    // test_repeat:-[repeat(anything,0,[]),repeat(a,3,[a,a,a])]
        p1 = new PRED_repeat_3(s4, si5, s8, cont);
        return new PRED_repeat_3(s1, si2, s3, p1);
    }
}
