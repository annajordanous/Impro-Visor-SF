package prolog;

import jp.ac.kobe_u.cs.prolog.lang.*;
import jp.ac.kobe_u.cs.prolog.builtin.*;
/*
 This file is generated by Prolog Cafe.
 PLEASE DO NOT EDIT!
*/
/**
 <code>'$init'/0</code> defined in tester.pro<br>
 @author Mutsunori Banbara (banbara@kobe-u.ac.jp)
 @author Naoyuki Tamura (tamura@kobe-u.ac.jp)
 @version 1.0
*/
public class PRED_$init_0 extends Predicate {
    static SymbolTerm s1 = SymbolTerm.makeSymbol("user");
    static SymbolTerm s2 = SymbolTerm.makeSymbol("/", 2);
    static SymbolTerm s3 = SymbolTerm.makeSymbol("notation");
    static IntegerTerm si4 = new IntegerTerm(3);
    static Term[] s5 = {s3, si4};
    static StructureTerm s6 = new StructureTerm(s2, s5);
    static SymbolTerm s7 = SymbolTerm.makeSymbol("attr_memo");
    static IntegerTerm si8 = new IntegerTerm(2);
    static Term[] s9 = {s7, si8};
    static StructureTerm s10 = new StructureTerm(s2, s9);
    static SymbolTerm s11 = SymbolTerm.makeSymbol("symbol_duration_memo");
    static Term[] s12 = {s11, si8};
    static StructureTerm s13 = new StructureTerm(s2, s12);
    static SymbolTerm s14 = SymbolTerm.makeSymbol("attr_median_diff");
    static Term[] s15 = {s14, si8};
    static StructureTerm s16 = new StructureTerm(s2, s15);
    static SymbolTerm s17 = SymbolTerm.makeSymbol("rule");
    static IntegerTerm si18 = new IntegerTerm(4);
    static Term[] s19 = {s17, si18};
    static StructureTerm s20 = new StructureTerm(s2, s19);
    static SymbolTerm s21 = SymbolTerm.makeSymbol("recorded");
    static Term[] s22 = {s21, si8};
    static StructureTerm s23 = new StructureTerm(s2, s22);
    static Term[] s24 = {s21, si4};
    static StructureTerm s25 = new StructureTerm(s2, s24);
    static SymbolTerm s26 = SymbolTerm.makeSymbol("flagged");
    static Term[] s27 = {s26, si8};
    static StructureTerm s28 = new StructureTerm(s2, s27);

    public PRED_$init_0(Predicate cont) {
        this.cont = cont;
    }

    public PRED_$init_0(){}

    public void setArgument(Term[] args, Predicate cont) {
        this.cont = cont;
    }

    public int arity() { return 0; }

    public String toString() {
        return "$init";
    }

    public Predicate exec(Prolog engine) {
    // '$init':-'$new_indexing_hash'(user,notation/3,A),'$new_indexing_hash'(user,attr_memo/2,B),'$new_indexing_hash'(user,symbol_duration_memo/2,C),'$new_indexing_hash'(user,attr_median_diff/2,D),'$new_indexing_hash'(user,rule/4,E),'$new_indexing_hash'(user,recorded/2,F),'$new_indexing_hash'(user,recorded/3,G),'$new_indexing_hash'(user,flagged/2,H)
        engine.setB0();
        Predicate p1, p2, p3, p4, p5, p6, p7;
    // '$init':-['$new_indexing_hash'(user,notation/3,A),'$new_indexing_hash'(user,attr_memo/2,B),'$new_indexing_hash'(user,symbol_duration_memo/2,C),'$new_indexing_hash'(user,attr_median_diff/2,D),'$new_indexing_hash'(user,rule/4,E),'$new_indexing_hash'(user,recorded/2,F),'$new_indexing_hash'(user,recorded/3,G),'$new_indexing_hash'(user,flagged/2,H)]
        p1 = new PRED_$new_indexing_hash_3(s1, s28, new VariableTerm(engine), cont);
        p2 = new PRED_$new_indexing_hash_3(s1, s25, new VariableTerm(engine), p1);
        p3 = new PRED_$new_indexing_hash_3(s1, s23, new VariableTerm(engine), p2);
        p4 = new PRED_$new_indexing_hash_3(s1, s20, new VariableTerm(engine), p3);
        p5 = new PRED_$new_indexing_hash_3(s1, s16, new VariableTerm(engine), p4);
        p6 = new PRED_$new_indexing_hash_3(s1, s13, new VariableTerm(engine), p5);
        p7 = new PRED_$new_indexing_hash_3(s1, s10, new VariableTerm(engine), p6);
        return new PRED_$new_indexing_hash_3(s1, s6, new VariableTerm(engine), p7);
    }
}
