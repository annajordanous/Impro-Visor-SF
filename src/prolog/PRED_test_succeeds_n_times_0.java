package prolog;

import jp.ac.kobe_u.cs.prolog.lang.*;
import jp.ac.kobe_u.cs.prolog.builtin.*;
/*
 This file is generated by Prolog Cafe.
 PLEASE DO NOT EDIT!
*/
/**
 <code>test_succeeds_n_times/0</code> defined in plcafe_defs.pro<br>
 @author Mutsunori Banbara (banbara@kobe-u.ac.jp)
 @author Naoyuki Tamura (tamura@kobe-u.ac.jp)
 @version 1.0
*/
public class PRED_test_succeeds_n_times_0 extends Predicate {
    static SymbolTerm s1 = SymbolTerm.makeSymbol("plus", 3);
    static IntegerTerm si2 = new IntegerTerm(1);
    static IntegerTerm si3 = new IntegerTerm(2);

    public PRED_test_succeeds_n_times_0(Predicate cont) {
        this.cont = cont;
    }

    public PRED_test_succeeds_n_times_0(){}

    public void setArgument(Term[] args, Predicate cont) {
        this.cont = cont;
    }

    public int arity() { return 0; }

    public String toString() {
        return "test_succeeds_n_times";
    }

    public Predicate exec(Prolog engine) {
    // test_succeeds_n_times:-succeeds_n_times(plus(1,2,A),1)
        engine.setB0();
        Term a1;
    // test_succeeds_n_times:-[succeeds_n_times(plus(1,2,A),1)]
        Term[] y1 = {si2, si3, new VariableTerm(engine)};
        a1 = new StructureTerm(s1, y1);
        return new PRED_succeeds_n_times_2(a1, si2, cont);
    }
}
