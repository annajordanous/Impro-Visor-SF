package prolog;

import jp.ac.kobe_u.cs.prolog.lang.*;
import jp.ac.kobe_u.cs.prolog.builtin.*;
/*
 This file is generated by Prolog Cafe.
 PLEASE DO NOT EDIT!
*/
/**
 <code>test_assoc/0</code> defined in functional.pro<br>
 @author Mutsunori Banbara (banbara@kobe-u.ac.jp)
 @author Naoyuki Tamura (tamura@kobe-u.ac.jp)
 @version 1.0
*/
public class PRED_test_assoc_0 extends Predicate {
    static SymbolTerm s1 = SymbolTerm.makeSymbol("b");
    static SymbolTerm s2 = SymbolTerm.makeSymbol("a");
    static IntegerTerm si3 = new IntegerTerm(3);
    static SymbolTerm s4 = SymbolTerm.makeSymbol("[]");
    static ListTerm s5 = new ListTerm(si3, s4);
    static ListTerm s6 = new ListTerm(s2, s5);
    static IntegerTerm si7 = new IntegerTerm(5);
    static ListTerm s8 = new ListTerm(si7, s4);
    static ListTerm s9 = new ListTerm(s1, s8);
    static ListTerm s10 = new ListTerm(s9, s4);
    static ListTerm s11 = new ListTerm(s6, s10);

    public PRED_test_assoc_0(Predicate cont) {
        this.cont = cont;
    }

    public PRED_test_assoc_0(){}

    public void setArgument(Term[] args, Predicate cont) {
        this.cont = cont;
    }

    public int arity() { return 0; }

    public String toString() {
        return "test_assoc";
    }

    public Predicate exec(Prolog engine) {
    // test_assoc:-assoc(b,[[a,3],[b,5]],5),'$dummy_13_functional.pro'(A)
        engine.setB0();
        Predicate p1;
    // test_assoc:-[assoc(b,[[a,3],[b,5]],5),'$dummy_13_functional.pro'(A)]
        p1 = new PRED_$dummy_13_functional$002Epro_1(new VariableTerm(engine), cont);
        return new PRED_assoc_3(s1, s11, si7, p1);
    }
}
