package prolog;













import jp.ac.kobe_u.cs.prolog.lang.*;
import jp.ac.kobe_u.cs.prolog.builtin.*;
/*
 This file is generated by Prolog Cafe.
 PLEASE DO NOT EDIT!
*/
/**
 <code>retract_rules/0</code> defined in rule_database.pro<br>
 @author Mutsunori Banbara (banbara@kobe-u.ac.jp)
 @author Naoyuki Tamura (tamura@kobe-u.ac.jp)
 @version 1.0
*/
public class PRED_retract_rules_0 extends Predicate {
    static SymbolTerm s1 = SymbolTerm.makeSymbol("rule", 4);

    public PRED_retract_rules_0(Predicate cont) {
        this.cont = cont;
    }

    public PRED_retract_rules_0(){}

    public void setArgument(Term[] args, Predicate cont) {
        this.cont = cont;
    }

    public int arity() { return 0; }

    public String toString() {
        return "retract_rules";
    }

    public Predicate exec(Prolog engine) {
    // retract_rules:-retractall_nonvar(rule(A,B,C,D))
        engine.setB0();
        Term a1;
    // retract_rules:-[retractall_nonvar(rule(A,B,C,D))]
        Term[] y1 = {new VariableTerm(engine), new VariableTerm(engine), new VariableTerm(engine), new VariableTerm(engine)};
        a1 = new StructureTerm(s1, y1);
        return new PRED_retractall_nonvar_1(a1, cont);
    }
}
