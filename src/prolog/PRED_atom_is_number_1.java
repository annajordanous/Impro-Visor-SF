package prolog;

import jp.ac.kobe_u.cs.prolog.lang.*;
import jp.ac.kobe_u.cs.prolog.builtin.*;
/*
 This file is generated by Prolog Cafe.
 PLEASE DO NOT EDIT!
*/
/**
 <code>atom_is_number/1</code> defined in rule_initialize.pro<br>
 @author Mutsunori Banbara (banbara@kobe-u.ac.jp)
 @author Naoyuki Tamura (tamura@kobe-u.ac.jp)
 @version 1.0
*/
public class PRED_atom_is_number_1 extends Predicate {
    static SymbolTerm s1 = SymbolTerm.makeSymbol("char_is_number");

    public Term arg1;

    public PRED_atom_is_number_1(Term a1, Predicate cont) {
        arg1 = a1;
        this.cont = cont;
    }

    public PRED_atom_is_number_1(){}

    public void setArgument(Term[] args, Predicate cont) {
        arg1 = args[0];
        this.cont = cont;
    }

    public int arity() { return 1; }

    public String toString() {
        return "atom_is_number(" + arg1 + ")";
    }

    public Predicate exec(Prolog engine) {
    // atom_is_number(A):-atom_codes(A,B),has_property(B,char_is_number)
        engine.setB0();
        Term a1, a2;
        Predicate p1;
        a1 = arg1;
    // atom_is_number(A):-[atom_codes(A,B),has_property(B,char_is_number)]
        a2 = new VariableTerm(engine);
        p1 = new PRED_has_property_2(a2, s1, cont);
        return new PRED_atom_codes_2(a1, a2, p1);
    }
}
