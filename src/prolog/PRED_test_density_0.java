import jp.ac.kobe_u.cs.prolog.lang.*;
import jp.ac.kobe_u.cs.prolog.builtin.*;
/*
 This file is generated by Prolog Cafe.
 PLEASE DO NOT EDIT!
*/
/**
 <code>test_density/0</code> defined in attributes.pro<br>
 @author Mutsunori Banbara (banbara@kobe-u.ac.jp)
 @author Naoyuki Tamura (tamura@kobe-u.ac.jp)
 @version 1.0
*/
public class PRED_test_density_0 extends Predicate {
    static IntegerTerm si1 = new IntegerTerm(240);
    static SymbolTerm s2 = SymbolTerm.makeSymbol("t", 2);
    static SymbolTerm s3 = SymbolTerm.makeSymbol("c");
    static IntegerTerm si4 = new IntegerTerm(120);
    static Term[] s5 = {s3, si4};
    static StructureTerm s6 = new StructureTerm(s2, s5);
    static SymbolTerm s7 = SymbolTerm.makeSymbol("[]");
    static ListTerm s8 = new ListTerm(s6, s7);
    static ListTerm s9 = new ListTerm(s6, s8);

    public PRED_test_density_0(Predicate cont) {
        this.cont = cont;
    }

    public PRED_test_density_0(){}

    public void setArgument(Term[] args, Predicate cont) {
        this.cont = cont;
    }

    public int arity() { return 0; }

    public String toString() {
        return "test_density";
    }

    public Predicate exec(Prolog engine) {
    // test_density:-density(240,[t(c,120),t(c,120)],A),density(120,[t(c,120)],A)
        engine.setB0();
        Term a1;
        Predicate p1;
    // test_density:-[density(240,[t(c,120),t(c,120)],A),density(120,[t(c,120)],A)]
        a1 = new VariableTerm(engine);
        p1 = new PRED_density_3(si4, s8, a1, cont);
        return new PRED_density_3(si1, s9, a1, p1);
    }
}
